{"version":3,"sources":["D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/common/backoffice-shared/services/application-resolver.service.ts","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/common/backoffice-shared/services/department-resolver.service.ts","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/common/backoffice-shared/services/designation-resolver.service.ts","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/common/backoffice-shared/services/hotel-resolver.service.ts","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/common/backoffice-shared/services/role-resolver.service.ts","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/user-mgmt/agent-user/agent-user-info/agent-user-info.component.css","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/user-mgmt/agent-user/agent-user-info/agent-user-info.component.html","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/user-mgmt/agent-user/agent-user-info/agent-user-info.component.ts","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/user-mgmt/agent-user/agent-user-list/agent-user-list.component.css","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/user-mgmt/agent-user/agent-user-list/agent-user-list.component.html","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/user-mgmt/agent-user/agent-user-list/agent-user-list.component.ts","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/user-mgmt/hotel-user/hotel-type/hotel-type.component.css","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/user-mgmt/hotel-user/hotel-type/hotel-type.component.html","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/user-mgmt/hotel-user/hotel-type/hotel-type.component.ts","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/user-mgmt/hotel-user/hotel-user-info/hotel-user-info.component.css","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/user-mgmt/hotel-user/hotel-user-info/hotel-user-info.component.html","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/user-mgmt/hotel-user/hotel-user-info/hotel-user-info.component.ts","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/user-mgmt/hotel-user/hotel-user-list/hotel-user-list.component.css","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/user-mgmt/hotel-user/hotel-user-list/hotel-user-list.component.html","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/user-mgmt/hotel-user/hotel-user-list/hotel-user-list.component.ts","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/user-mgmt/hotel-user/individual-hotel-user-info/individual-hotel-user-info.component.css","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/user-mgmt/hotel-user/individual-hotel-user-info/individual-hotel-user-info.component.html","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/user-mgmt/hotel-user/individual-hotel-user-info/individual-hotel-user-info.component.ts","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/user-mgmt/hotel-user/supplier-user-info/supplier-user-info.component.css","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/user-mgmt/hotel-user/supplier-user-info/supplier-user-info.component.html","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/user-mgmt/hotel-user/supplier-user-info/supplier-user-info.component.ts","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/user-mgmt/mg-user/mg-user-info/mg-user-info.component.css","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/user-mgmt/mg-user/mg-user-info/mg-user-info.component.html","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/user-mgmt/mg-user/mg-user-info/mg-user-info.component.ts","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/user-mgmt/mg-user/mg-user-list/mg-user-list.component.css","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/user-mgmt/mg-user/mg-user-list/mg-user-list.component.html","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/user-mgmt/mg-user/mg-user-list/mg-user-list.component.ts","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/user-mgmt/user-mgmt-routing.module.ts","D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/user-mgmt/user-mgmt.module.ts"],"names":[],"mappings":"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","file":"user-mgmt.module.chunk.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { BackofficeLookupService } from './backoffice-lookup';\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs/Observable';\nimport { MgApplicationViewModel } from '../../../viewmodel/usersviewmodel/mgapplicationlistviewmodel';\n\n\n@Injectable()\nexport class ApplicationResolverService implements Resolve<MgApplicationViewModel[]> {\n\n  constructor(private backofficeLookupService: BackofficeLookupService) { }\n\n  resolve(route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<MgApplicationViewModel[]> {\n      return this.backofficeLookupService.getApplications();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/common/backoffice-shared/services/application-resolver.service.ts","import { Injectable } from '@angular/core';\r\nimport { Resolve } from '@angular/router/src/interfaces';\r\nimport { BackofficeLookupService } from './backoffice-lookup';\r\nimport { ActivatedRoute, ActivatedRouteSnapshot } from '@angular/router/src/router_state';\r\nimport { RouterStateSnapshot } from '@angular/router';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { DepartmentViewModel } from '../../../viewmodel/usersviewmodel/departmentviewmodel';\r\n\r\n\r\n@Injectable()\r\nexport class DepartmentResolverService implements Resolve<DepartmentViewModel[]> {\r\n  constructor(private backOfficeLookupService: BackofficeLookupService) { }\r\n  resolve(route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<DepartmentViewModel[]> {\r\n    return this.backOfficeLookupService.getDepartments();\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/common/backoffice-shared/services/department-resolver.service.ts","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { BackofficeLookupService } from './backoffice-lookup';\nimport { DesignationViewModel } from '../../../viewmodel/usersviewmodel/designationviewmodel';\nimport { Observable } from 'rxjs/Observable';\nimport { CONSTANTS } from '../../../../common/constants';\n\n@Injectable()\nexport class DesignationResolverService {\n  type = CONSTANTS.userType.hoteluser;\n  constructor(private backofficeLookupService: BackofficeLookupService) { }\n\n  resolve(route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<DesignationViewModel[]> {\n      return this.backofficeLookupService.getDesignationByType(this.type);\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/common/backoffice-shared/services/designation-resolver.service.ts","import { Injectable } from '@angular/core';\nimport { BackofficeLookupService } from './backoffice-lookup';\nimport { ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs/Observable';\nimport { HotelNameViewModel } from '../../../viewmodel/usersviewmodel/hotelnameviewmodel';\n\n@Injectable()\nexport class HotelResolverService {\n\n  constructor(private backOfficeLookUpService: BackofficeLookupService) { }\n\n  resolve(route: ActivatedRouteSnapshot,\n          state: RouterStateSnapshot): Observable<HotelNameViewModel[]> {\n            return this.backOfficeLookUpService.getIndividualHotels();\n          }\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/common/backoffice-shared/services/hotel-resolver.service.ts","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs/Observable';\nimport { BackofficeLookupService } from './backoffice-lookup';\nimport { MgRoleViewModel } from '../../../viewmodel/usersviewmodel/mgrolelistviewmodel';\nimport { CONSTANTS } from '../../../../common/constants';\n\n@Injectable()\nexport class RoleResolverService {\n  applicationName = CONSTANTS.application.extranet;\n  constructor( private backofficeLookupService: BackofficeLookupService) { }\n\n  resolve(route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<MgRoleViewModel[]> {\n      return this.backofficeLookupService.getRolesByApplicationName(this.applicationName);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/common/backoffice-shared/services/role-resolver.service.ts","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/user-mgmt/agent-user/agent-user-info/agent-user-info.component.css\n// module id = ../../../../../src/app/backoffice/user-mgmt/agent-user/agent-user-info/agent-user-info.component.css\n// module chunks = user-mgmt.module","module.exports = \"<div class=\\\"container-fluid pt-4\\\">\\n  <div class=\\\"customBreadcrumb mb-4\\\">\\n    <span>Agents </span>\\n    <span>&gt; Create New Agent</span>\\n    <span class=\\\"mandatoryInfo\\\">Indicates Mandatory Fields</span>\\n  </div>\\n  <h1 class=\\\"mainHeading mb-2\\\">Create New Agent</h1>\\n\\n  <form [formGroup]=\\\"agentForm\\\" (ngSubmit)=\\\"saveAgent()\\\">\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"form-group col-md-4 col-lg-3 mb-0\\\">\\n        <mat-form-field>\\n          <input type=\\\"text\\\" matInput placeholder=\\\"Search by Agency Name/Code\\\" formControlName=\\\"agency\\\" [matAutocomplete]=\\\"auto\\\">\\n          <mat-autocomplete #auto=\\\"matAutocomplete\\\" [displayWith]=\\\"displayFn\\\">\\n            <mat-option *ngFor=\\\"let agency of filteredOptions | async\\\" [value]=\\\"agency\\\" (onSelectionChange)=\\\"getBranches(agency.id)\\\">\\n              {{ agency.name }} - {{agency.code}}\\n            </mat-option>\\n          </mat-autocomplete>\\n        </mat-form-field>\\n      </div>\\n\\n      <div class=\\\"form-group col-md-4 col-lg-3 mb-0 \\\">\\n        <mat-form-field>\\n          <input matInput placeholder=\\\"Search by Branch Name\\\" name=\\\"branch\\\" formControlName=\\\"branch\\\" [matAutocomplete]=\\\"autoBranch\\\">\\n          <mat-autocomplete #autoBranch=\\\"matAutocomplete\\\" [displayWith]=\\\"displayBranchFn\\\">\\n            <mat-option *ngFor=\\\"let branch of filteredBranchOptions | async\\\" [value]=\\\"branch\\\">\\n              {{ branch.name }}\\n            </mat-option>\\n          </mat-autocomplete>\\n        </mat-form-field>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-2\\\">\\n        <mat-icon class=\\\"userImage\\\">account_circle</mat-icon>\\n        <button class=\\\"deletePhoto\\\" mat-raised-button title=\\\"Delete Image\\\">\\n          <i class=\\\"fa fa-times-thin\\\"></i>\\n        </button>\\n        <div class=\\\"image-upload\\\">\\n          <label for=\\\"file-input\\\">\\n            <img src=\\\"assets/uploadPhoto.png\\\" title=\\\"Upload Image\\\" />\\n          </label>\\n          <input id=\\\"file-input\\\" type=\\\"file\\\" />\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"form-group col-md-4 col-lg-3\\\">\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <input matInput placeholder=\\\"User Name\\\" id=\\\"userName\\\" formControlName=\\\"userName\\\" required />\\n        </mat-form-field>\\n      </div>\\n      <div class=\\\"form-group col-md-4 col-lg-3\\\">\\n        <mat-form-field>\\n          <mat-select placeholder=\\\"Designation\\\" formControlName=\\\"designationId\\\" required>\\n            <mat-option [value]=\\\"null\\\">Select</mat-option>\\n            <mat-option *ngFor=\\\"let designation of designationList\\\" [value]=\\\"designation.designationId\\\">{{designation.title}}</mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n      </div>\\n\\n      <div class=\\\"form-group col-md-4 col-lg-3\\\">\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <input matInput placeholder=\\\"Email ID\\\" id=\\\"emailID\\\" formControlName=\\\"email\\\" pattern=\\\"\\\\w+@\\\\w+\\\\.\\\\w+(,\\\\s*\\\\w+@\\\\w+\\\\.\\\\w+)*\\\" required\\n          />\\n        </mat-form-field>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"pt-1 form-group col-md-4 col-lg-3\\\">\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <input matInput placeholder=\\\"Contact Number\\\" id=\\\"contactNumber\\\" formControlName=\\\"contactNumber\\\" required\\n          pattern=\\\"[0-9+-]+(,\\\\s*[0-9+-]+)*\\\" type=\\\"tel\\\" maxlength=\\\"15\\\"/>\\n        </mat-form-field>\\n      </div>\\n\\n      <div class=\\\"pt-1 form-group col-md-4 col-lg-3\\\">\\n        <mat-form-field>\\n          <mat-select placeholder=\\\"Role\\\" formControlName=\\\"b2BRoleId\\\" required>\\n            <mat-option [value]=\\\"null\\\">Select</mat-option>\\n            <mat-option *ngFor=\\\"let role of roleList\\\" [value]=\\\"role.id\\\">{{role.name}}</mat-option>\\n          </mat-select>\\n        </mat-form-field>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-3\\\">\\n        <mat-form-field class=\\\"example-full-width\\\">\\n          <input matInput [matDatepicker]=\\\"activationDate\\\" placeholder=\\\"Activation Date\\\" formControlName=\\\"activationDate\\\" [min]=\\\"todaysDate\\\"\\n            require>\\n          <mat-datepicker-toggle matSuffix [for]=\\\"activationDate\\\"></mat-datepicker-toggle>\\n          <mat-datepicker #activationDate></mat-datepicker>\\n        </mat-form-field>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12 controlButtons mt-5 mb-4\\\">\\n        <button title=\\\"Save\\\" type=\\\"submit\\\" class=\\\"genericButton activeButton mat-primary mr-2\\\" [disabled]=\\\"!agentForm.valid\\\" mat-raised-button>Save</button>\\n        <button title=\\\"Cancel\\\" type=\\\"submit\\\" class=\\\"genericButton defaultButton\\\" mat-raised-button (click)=\\\"cancel()\\\">Cancel</button>\\n      </div>\\n    </div>\\n  </form>\\n\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/user-mgmt/agent-user/agent-user-info/agent-user-info.component.html\n// module id = ../../../../../src/app/backoffice/user-mgmt/agent-user/agent-user-info/agent-user-info.component.html\n// module chunks = user-mgmt.module","import { Component, OnInit } from '@angular/core';\nimport { CONSTANTS } from '../../../../common/constants';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { UserDataService } from '../../../common/backoffice-shared/services/user-data.service';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { AgentInfoViewModel } from '../../../viewmodel/usersviewmodel/agentinfoviewmodel';\nimport { AgencyViewModel } from '../../../viewmodel/usersviewmodel/agencyviewmodel';\nimport { DesignationViewModel } from '../../../viewmodel/usersviewmodel/designationviewmodel';\nimport { MgRoleViewModel } from '../../../viewmodel/usersviewmodel/mgrolelistviewmodel';\nimport { BackofficeLookupService } from '../../../common/backoffice-shared/services/backoffice-lookup';\nimport { BranchViewModel } from '../../../viewmodel/usersviewmodel/branchviewmodel';\nimport { Observable } from 'rxjs/Observable';\nimport {startWith} from 'rxjs/operators/startWith';\nimport {map} from 'rxjs/operators/map';\nimport { MatSnackBar } from '@angular/material';\n\n\n@Component({\n  selector: 'app-agent-user-info',\n  templateUrl: './agent-user-info.component.html',\n  styleUrls: ['./agent-user-info.component.css']\n})\n\nexport class AgentUserInfoComponent implements OnInit {\n  operation: string;\n  edit = CONSTANTS.operation.edit;\n  create = CONSTANTS.operation.create;\n  hotelId: number;\n  agentId: number;\n  agentInfo: AgentInfoViewModel = <AgentInfoViewModel>{};\n  agentForm: FormGroup;\n  designationList: DesignationViewModel[];\n  roleList: MgRoleViewModel[];\n  agencyList: AgencyViewModel[] = [];\n  branchList: BranchViewModel[] = [];\n  selectedStartDate: string;\n  public todaysDate = new Date();\n  minDate: string;\n  filteredOptions: Observable<AgencyViewModel[]>;\n  filteredBranchOptions: Observable<BranchViewModel[]>;\n\n  constructor(private router: Router, private activatedRoute: ActivatedRoute,\n    public lookupService: BackofficeLookupService,\n    private userDataService: UserDataService,\n    private snackBar: MatSnackBar) { }\n\n  ngOnInit() {\n    this.operation = this.activatedRoute.snapshot.params['operation'];\n    this.agentId = this.activatedRoute.snapshot.params['id'];\n\n    this.agentForm = new FormGroup({\n      agency: new FormControl('', Validators.required),\n      branch: new FormControl('' , Validators.required),\n      userName: new FormControl('', Validators.required),\n      designationId: new FormControl('', Validators.required),\n      email: new FormControl('', Validators.required),\n      contactNumber: new FormControl('', Validators.required),\n      b2BRoleId: new FormControl('', Validators.required),\n      activationDate: new FormControl('', Validators.required),\n    });\n\n    this.getDesignations();\n    this.getRoles();\n    this.getAgencies();\n\n    this.filteredOptions = this.agentForm.controls.agency.valueChanges\n    .pipe(\n      startWith(''),\n      map(val => this.filter(val.toString()))\n    );\n\n    this.filteredBranchOptions = this.agentForm.controls.branch.valueChanges\n    .pipe(\n      startWith(''),\n      map(val => this.filterBranch(val.toString()))\n    );\n  }\n\n  filter(val: string): AgencyViewModel[] {\n    if (this.agencyList.length > 0 ) {\n    return this.agencyList.filter(option =>\n       option.name.toString().toLowerCase().indexOf(val.toString().toLowerCase()) === 0);\n    }\n  }\n\n  filterBranch(val: string): BranchViewModel[] {\n    if (this.branchList.length > 0) {\n    return this.branchList.filter(option =>\n       option.name.toString().toLowerCase().indexOf(val.toString().toLowerCase()) === 0);\n    }\n  }\n\n  displayFn(val: AgencyViewModel) {\n    return val ? val.name + ' - ' + val.code : val ;\n  }\n\n  displayBranchFn(val: BranchViewModel) {\n    return val ? val.name : val ;\n  }\n\n  getDesignations() {\n    this.lookupService.getDesignationByType(CONSTANTS.userType.agentuser).subscribe(designationData =>\n      this.designationList = designationData\n    );\n  }\n\n  getRoles() {\n    this.lookupService.getRolesByApplicationName(CONSTANTS.application.b2b).subscribe(data =>\n      this.roleList = data\n    );\n  }\n\n  getAgencies() {\n    this.agencyList = this.activatedRoute.snapshot.data['agencies'];\n  }\n\n  getBranches(agencyId) {\n    this.branchList.splice(0, this.branchList.length);\n    // console.log('getBranches - Agency ID: ', agencyId);\n    this.agentForm.get('branch').setValue('');\n    if (agencyId !== null) {\n      this.lookupService.getAgencyBranches(agencyId).subscribe(data =>\n        this.branchList = data\n      ); }\n  }\n\n  saveAgent() {\n    const tempAgent = Object.assign({}, this.agentInfo, this.agentForm.value);\n    // console.log('tempAgent: ', tempAgent);\n    const agent: AgentInfoViewModel = <AgentInfoViewModel>{};\n    agent.designationId = tempAgent.designationId;\n    agent.agencyId = tempAgent.agency.id;\n    agent.branchId = tempAgent.branch.id;\n    agent.contactNumber = tempAgent.contactNumber;\n    agent.b2BRoleId = tempAgent.b2BRoleId;\n    // agent.firstName = tempAgent.firstName;\n    // agent.lastName = tempAgent.lastName;\n    agent.userName = tempAgent.userName ;\n    agent.email = tempAgent.email;\n    agent.activationDate = tempAgent.activationDate.toISOString();\n    if (tempAgent.activationDate.toISOString() > this.todaysDate.toISOString()) {\n      agent.isActive = false;\n    } else {\n      agent.isActive = true;\n    }\n    agent.createdBy = 'sa';\n    agent.updatedBy = 'sa';\n    // console.log('agent save : ', agent);\n    this.userDataService.createAgentUser(agent as AgentInfoViewModel)\n      .subscribe(data => {\n        console.log('createAgentUser Result:' + data);\n        if (data.succeeded === true ) {\n          this.snackBar.open('Agent Saved Successfully', '', { duration: 8000, verticalPosition: 'top', panelClass: 'showSnackBar'});\n          this.router.navigate(['/usermgmt/agentusers']);\n        } else {\n          // TODO: Need to check how we are doing error handling.\n          this.snackBar.open('Error occourred while saving Agent. ' + data.errors[0].description ,\n          '', { duration: 8000, verticalPosition: 'top', panelClass: 'showSnackBar'});\n        }\n      });\n  }\n\n  cancel() {\n    window.scrollTo(0, 0);\n    this.router.navigate(['/usermgmt/agentusers']);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/user-mgmt/agent-user/agent-user-info/agent-user-info.component.ts","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".usernameTH{\\r\\n    width: 15%;\\r\\n}\\r\\n.agencyTH{\\r\\n    width: 14%;\\r\\n    padding-left: 0;\\r\\n    padding-right: 0;\\r\\n}\\r\\n.branchTH{\\r\\n    width:10%;\\r\\n    padding-left: 0;\\r\\n    padding-right: 0;\\r\\n}\\r\\n.designationTH{\\r\\n    width:10%;\\r\\n}\\r\\n.emailTH{\\r\\n    width:13%;\\r\\n}\\r\\n.userApplicationRoleTH{\\r\\n    width:10%;\\r\\n}\\r\\n.activationTH{\\r\\n    width: 11%;\\r\\n    padding-left: 0;\\r\\n    padding-right: 0;\\r\\n}\\r\\n.userStatusTH{\\r\\n    width: 8%;\\r\\n    padding-left: 5px;\\r\\n    padding-right: 0;\\r\\n}\\r\\n.userActionTH{\\r\\n    width:9%;\\r\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/user-mgmt/agent-user/agent-user-list/agent-user-list.component.css\n// module id = ../../../../../src/app/backoffice/user-mgmt/agent-user/agent-user-list/agent-user-list.component.css\n// module chunks = user-mgmt.module","module.exports = \"<div class=\\\"container-fluid pt-4\\\">\\n  <h1 class=\\\"mainHeading pb-2 mb-4 mt-2\\\">Agents</h1>\\n<form [formGroup]=\\\"searchUsers\\\" (ngSubmit)=\\\"findUsers(searchUsers.get('searchText').value,searchUsers.get('startDate').value,searchUsers.get('endDate').value)\\\"\\nclass=\\\"w-100\\\">\\n\\n  <div class=\\\"blueBackground pt-1 pb-1 pl-0 pr-2 alignItemCenter\\\">\\n    <div class=\\\"row formSections borderBottomNone p-0 m-1\\\">\\n     \\n    <div class=\\\"col-md-2 d-flex pr-0\\\">\\n      <label class=\\\"optionsList mb-0 alignItemCenter pr-3\\\">From:</label>\\n            <mat-form-field>\\n              <mat-datepicker-toggle matSuffix [for]=\\\"sdate\\\">\\n                  <mat-icon matDatepickerToggleIcon>\\n                      <i class=\\\"fa fa-calendar\\\" aria-hidden=\\\"true\\\"></i>\\n                    </mat-icon>\\n              </mat-datepicker-toggle>\\n              <input matInput [matDatepicker]=\\\"sdate\\\" placeholder=\\\"DD-MMM-YY\\\" formControlName=\\\"startDate\\\">\\n              <mat-datepicker #sdate></mat-datepicker>\\n            </mat-form-field>\\n          </div>\\n\\n          <div class=\\\"col-md-2 d-flex pr-2 pl-4\\\">\\n          <label class=\\\"optionsList mb-0 alignItemCenter pr-3\\\">To:</label>\\n                  <mat-form-field>\\n                    <input matInput [matDatepicker]=\\\"enddate\\\" placeholder=\\\"DD-MMM-YY\\\" formControlName=\\\"endDate\\\" [min]=\\\"searchUsers.get('startDate').value\\\">\\n                    <mat-datepicker-toggle matSuffix [for]=\\\"enddate\\\">\\n                        <mat-icon matDatepickerToggleIcon>\\n                            <i class=\\\"fa fa-calendar\\\" aria-hidden=\\\"true\\\"></i>\\n                          </mat-icon>\\n                    </mat-datepicker-toggle>\\n                    <mat-datepicker #enddate></mat-datepicker>\\n                  </mat-form-field>  \\n          </div>\\n\\n          <div class=\\\"col-md-7 pl-4 pr-4\\\">\\r\\n            <mat-form-field>\\r\\n              <input matInput placeholder=\\\"Search by User Name, Agency Name, Agency Code, Branch Name, Email Id, Designation, Roles, Activation date \\\" formControlName=\\\"searchText\\\" (keydown.backspace)=\\\"checkIsInputCleared()\\\">\\r\\n            </mat-form-field>\\r\\n          </div>\\n\\n          <div class=\\\"col-md-1 alignItemCenter pl-1 controlButtons\\\">\\r\\n            <button title=\\\"Search\\\" type=\\\"submit\\\" class=\\\"genericButton genericSmallButton activeButton mat-primary mt-1\\\" mat-raised-button>Search</button>\\r\\n          </div>\\n\\n        </div>\\n      </div>\\n</form>\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-12 pt-4 mt-2 pb-3 mb-1 controlButtons\\\">\\n    <button title=\\\"Create New Agent\\\" type=\\\"submit\\\" class=\\\"pt-2 pb-2 genericButton genericSmallButton defaultButton createNew\\\" mat-raised-button\\n      (click)=\\\"createAgent()\\\">\\n      <i class=\\\"fa fa-plus-circle\\\" aria-hidden=\\\"true\\\"></i><span>Create New Agent</span></button>\\n    </div>\\n</div>\\n<mat-table #table [dataSource]= '!isSearch ? dataSource: filteredData' matSort (matSortChange)=\\\"sortData($event)\\\" matSortActive=\\\"activationDate\\\" matSortDirection=\\\"desc\\\" class=\\\"flexNone genericTable\\\">\\n  <ng-container matColumnDef=\\\"userName\\\">\\n    <mat-header-cell class=\\\"usernameTH alignItemCenter\\\" *matHeaderCellDef mat-sort-header> User Name </mat-header-cell>\\n      <mat-cell class =\\\"usernameTH\\\" *matCellDef=\\\"let element\\\"><div class=\\\"d-flex\\\"><mat-icon  class=\\\"userIcon alignItemCenter\\\">account_circle</mat-icon><span class=\\\"d-flex pl-4 alignItemCenter\\\">{{element.userName}}</span></div></mat-cell>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"agencyName\\\" >\\n      <mat-header-cell class =\\\"agencyTH text-center\\\" *matHeaderCellDef mat-sort-header> Agency Name - Code </mat-header-cell>\\n      <mat-cell class =\\\"agencyTH\\\" *matCellDef=\\\"let element\\\"> {{element.agencyName}}-{{element.agencyCode}} </mat-cell>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"branchName\\\">\\n      <mat-header-cell class =\\\"branchTH text-center\\\" *matHeaderCellDef mat-sort-header > Branch Name </mat-header-cell>\\n      <mat-cell class =\\\"branchTH\\\" *matCellDef=\\\"let element\\\"> {{element.branchName}} </mat-cell>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"designation\\\" >\\n      <mat-header-cell class =\\\"designationTH text-center\\\" *matHeaderCellDef mat-sort-header > Designation </mat-header-cell>\\n      <mat-cell class =\\\"designationTH\\\" *matCellDef=\\\"let element\\\"> {{element.designation}} </mat-cell>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"email\\\">\\n      <mat-header-cell class =\\\"emailTH text-center\\\"  *matHeaderCellDef mat-sort-header > Email ID </mat-header-cell>\\n      <mat-cell class =\\\"emailTH\\\" *matCellDef=\\\"let element\\\"> {{element.email}} </mat-cell>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"userApplicationRole\\\">\\n      <mat-header-cell class =\\\"userApplicationRoleTH\\\"  *matHeaderCellDef mat-sort-header >  Role\\n        </mat-header-cell>\\n      <mat-cell class =\\\"userApplicationRoleTH\\\" *matCellDef=\\\"let element\\\">\\n          <ng-container *ngFor=\\\"let c of element.userApplicationRole\\\">\\n                    <span class=\\\"d-block\\\"> {{c.roleName}}</span>\\n            </ng-container>\\n         </mat-cell>\\n    </ng-container>\\n\\n\\n    <ng-container matColumnDef=\\\"activationDate\\\">\\n        <mat-header-cell class =\\\"activationTH text-center\\\"  *matHeaderCellDef mat-sort-header >\\n    <span class=\\\"text-center\\\"><span class=\\\"d-block\\\">Activation/</span>Inactivation Date</span></mat-header-cell>\\n        <mat-cell class =\\\"activationTH\\\" *matCellDef=\\\"let element\\\"><span class=\\\"d-block\\\">{{element.activationDate | date : \\\"dd-MMM-yy\\\"}}/</span>\\n          <ng-container *ngIf=\\\"!element.isActive\\\">\\n            {{element.deActivationDate | date : \\\"dd-MMM-yy\\\"}}\\n            </ng-container>\\n        </mat-cell>\\n      </ng-container>\\n\\n    <ng-container matColumnDef=\\\"isActive\\\">\\n        <mat-header-cell class=\\\"userStatusTH noOutlineOnFocus\\\"  *matHeaderCellDef mat-sort-header> Status </mat-header-cell>\\n        <mat-cell class=\\\"userStatusTH\\\" *matCellDef=\\\"let element\\\">\\n          <ng-container *ngIf=\\\" element.isActive == true\\\">\\n            <i class=\\\"fa fa-circle active_status\\\" aria-hidden=\\\"true\\\"></i>Active</ng-container>\\n          <ng-container *ngIf=\\\"!element.isActive\\\">\\n            <i class=\\\"fa fa-circle inactive_status\\\" aria-hidden=\\\"true\\\"></i>InActive\\n           </ng-container>\\n        </mat-cell>\\n      </ng-container>\\n\\n      <ng-container  matColumnDef=\\\"actions\\\" class=\\\"text-center\\\">\\n        <mat-header-cell class=\\\"userActionTH noOutlineOnFocus\\\"  *matHeaderCellDef> </mat-header-cell>\\n        <mat-cell class=\\\"userActionTH\\\" *matCellDef=\\\"let element\\\">\\n          <mat-select placeholder=\\\"Actions\\\" name=\\\"Actions\\\" [(ngModel)]=\\\"actions\\\">\\n              <ng-container *ngIf=\\\"element.isActive== true \\\">\\n                   <mat-option value=\\\"{{element.id}}:edit\\\" #edit (click)=\\\"GoUserUpdate(edit.value)\\\">Edit</mat-option>\\n              </ng-container>\\n            <mat-option value=\\\"{{element.id}}:delete\\\" #delete (click)=\\\"GoUserDelete(delete.value)\\\">Delete</mat-option>\\n          </mat-select>\\n        </mat-cell>\\n      </ng-container>\\n\\n<mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n<mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n\\n</mat-table>\\n<mat-paginator #paginator class=\\\"genericPagination\\\" [pageSize]=\\\"10\\\" [pageSizeOptions]=\\\"[5, 10, 20]\\\"></mat-paginator>\\n\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/user-mgmt/agent-user/agent-user-list/agent-user-list.component.html\n// module id = ../../../../../src/app/backoffice/user-mgmt/agent-user/agent-user-list/agent-user-list.component.html\n// module chunks = user-mgmt.module","import { Component, OnInit, ViewChild, Input } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { CONSTANTS } from '../../../../common/constants';\nimport { NativeDateAdapter, DateAdapter, MAT_DATE_FORMATS, MatTableDataSource, MatPaginator, MatSort, Sort } from '@angular/material';\nimport { DatePipe } from '@angular/common';\nimport { DialogsService } from '../../../common/backoffice-shared/dialogs/dialogs.service';\nimport { Agentuserlistviewmodel } from '../../../viewmodel/usersviewmodel/agentuserlistviewmodel';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { UserDataService } from '../../../common/backoffice-shared/services/user-data.service';\n\nconst DATE_FORMATS = {\n  parse: {\n    dateInput: { month: 'short', year: 'numeric', day: 'numeric' }\n  },\n  display: {\n    dateInput: 'input',\n    monthYearLabel: { year: 'numeric', month: 'short' },\n    dateA11yLabel: { year: 'numeric', month: 'long', day: 'numeric' },\n    monthYearA11yLabel: { year: 'numeric', month: 'long' },\n  }\n};\nexport class DatePickerDateAdapter extends NativeDateAdapter {\n  format(date: Date, displayFormat: Object): string {\n    date.setMinutes((date.getTimezoneOffset() * -1));\n    if (displayFormat === 'input') {\n      const day = date.getDate();\n      const month = date.toLocaleString('en-us', { month: 'long' });\n      const year = date.getFullYear();\n      return this._to2digit(day) + '-' + month.substring(0, 3) + '-' + year % 100;\n    } else {\n      return date.toDateString();\n    }\n  }\n\n  private _to2digit(n: number) {\n    return ('00' + n).slice(-2);\n  }\n}\n@Component({\n  selector: 'app-agent-user-list',\n  templateUrl: './agent-user-list.component.html',\n  styleUrls: ['./agent-user-list.component.css'],\n  providers: [DatePipe, DialogsService,\n    { provide: DateAdapter, useClass: DatePickerDateAdapter },\n    { provide: MAT_DATE_FORMATS, useValue: DATE_FORMATS },\n  ]\n})\nexport class AgentUserListComponent implements OnInit {\n  edit = CONSTANTS.operation.edit;\n  create = CONSTANTS.operation.create;\n  read = CONSTANTS.operation.read;\n  operation: string;\n  isDeleted: boolean;\n  dataSource: MatTableDataSource<Agentuserlistviewmodel>;\n  displayedColumns = ['userName', 'agencyName', 'branchName', 'designation', 'email', 'userApplicationRole' ,\n   'activationDate', 'isActive', 'actions'];\n  searchUsers: FormGroup;\n  filteredData: MatTableDataSource<Agentuserlistviewmodel>;\n  isSearch: boolean;\n  actions: string;\n  result: any;\n  isAppRoleData: boolean;\n  isDesignationData: boolean;\n  agentUserList: Agentuserlistviewmodel[];\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  @Input()\n  _dateValue;\n\n  constructor(  private agentUserDataService: UserDataService,\n    private dialogsService: DialogsService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    public datepipe: DatePipe) { }\n\n  ngOnInit() {\n    this.getAgentUserList();\n    this.isSearch = false;\n    this.searchUsers = new FormGroup({\n      startDate: new FormControl(),\n      endDate: new FormControl(),\n      searchText: new FormControl()\n    });\n  }\n  findUsers(filterValue: string, filterFrom: string, filterTo: string) {\n    if (filterFrom !== null || filterTo !== null || (filterValue !== null && filterValue.length >= 3)) {\n      this.isSearch = true;\n    }\n    if (filterFrom !== null) {\n      filterFrom = this.datepipe.transform(filterFrom, 'yyyy-MM-dd');\n    }\n    if (filterTo !== null) {\n      filterTo = this.datepipe.transform(filterTo, 'yyyy-MM-dd');\n    }\n    if (filterValue !== null) {\n      filterValue = filterValue.trim();\n      filterValue = filterValue.toLowerCase();\n    }\n\n    this.filteredData = new MatTableDataSource<Agentuserlistviewmodel>(this.agentUserList.filter(user => {\n      const searchActivationDate = this.datepipe.transform(user.activationDate, 'dd-MMM-yy hh:mm a');\n      const activationDate = this.datepipe.transform(user.activationDate, 'yyyy-MM-dd');\n      if (filterValue !== null && (filterFrom === null && filterTo === null)) {\n        return this.filterUser(user, filterValue) ||\n        searchActivationDate.toLowerCase().includes(filterValue);\n      } else if (filterFrom !== null && (filterTo === null && filterValue === null)) {\n        return activationDate >= filterFrom;\n      } else if (filterTo !== null && (filterFrom === null && filterValue === null)) {\n        return activationDate <= filterTo;\n      } else if (filterValue === null && (filterFrom !== null && filterTo !== null)) {\n        return filterFrom <= activationDate && activationDate <= filterTo;\n      } else if (filterFrom === null && (filterValue !== null && filterTo !== null)) {\n        return (this.filterUser(user, filterValue) ||\n        searchActivationDate.toLowerCase().includes(filterValue)) && activationDate <= filterTo;\n      } else if (filterTo === null && (filterFrom !== null && filterValue !== null)) {\n        return (this.filterUser(user, filterValue) ||\n        searchActivationDate.toLowerCase().includes(filterValue)) &&\n        activationDate >= filterFrom;\n      } else if (filterFrom !== null && filterTo !== null && filterValue !== null) {\n        return (this.filterUser(user, filterValue) ||\n        searchActivationDate.toLowerCase().includes(filterValue)) &&\n          (filterFrom <= activationDate && activationDate <= filterTo);\n      }\n    }));\n    this.filteredData.paginator = this.paginator;\n    this.filteredData.sort = this.sort;\n  }\n  filterUser(agentUser: Agentuserlistviewmodel, filterValue: string) {\n    this.isAppRoleData = false;\n    this.isDesignationData = false;\n    for (let i = 0; i < agentUser.userApplicationRole.length; i++) {\n      if (agentUser.userApplicationRole[i].roleName.toLowerCase().includes(filterValue)) {\n        this.isAppRoleData = true;\n        break;\n      }\n    }\n    return agentUser.userName.toLowerCase().includes(filterValue) ||\n    agentUser.email.toLowerCase().includes(filterValue) ||\n    // agentUser.designation.toLowerCase().includes(filterValue) ||\n    // agentUser.branchName.toLowerCase().includes(filterValue) ||\n    // agentUser.agencyName.toLowerCase().includes(filterValue) ||\n    // agentUser.agencyCode.toLowerCase().includes(filterValue) ||\n    this.isAppRoleData || this.isDesignationData ;\n  }\n  checkIsInputCleared() {\n    if (this.searchUsers.get('searchText').value.length === 1) {\n      this.filteredData = new MatTableDataSource<Agentuserlistviewmodel>(this.agentUserList);\n    }\n  }\n  sortData(sort: Sort) {\n    const data = this.agentUserList.slice();\n    if (!sort.active || sort.direction === '') {\n      this.dataSource.data =  data.sort((a, b) => {\n        const isAsc = sort.direction === 'desc';\n           return compare(a.activationDate, b.activationDate, isAsc);\n      });\n      return;\n    }else {\n      if (this.isSearch) {\n        this.filteredData.data = this.filteredData.data.sort((a, b) => {\n          const isAsc = sort.direction === 'asc';\n          switch (sort.active) {\n            case 'userName': return compare(a.userName.toLowerCase(), b.userName.toLowerCase(), isAsc);\n            case 'email': return compare(a.email, b.email, isAsc);\n            case 'designation': return compare(+a.designation, +b.designation, isAsc);\n            case 'branchName': return compare(a.branchName, b.branchName, isAsc);\n            case 'agencyName': return compare(a.agencyName, b.agencyName, isAsc);\n            case 'userApplicationRole':\n            return compare((a.userApplicationRole.length === 0) ? '' :\n            a.userApplicationRole[0].roleName, (b.userApplicationRole.length === 0) ? '' :\n            b.userApplicationRole[0].roleName, isAsc);\n            case 'activationDate': return compare(a.activationDate, b.activationDate, isAsc);\n            case 'isActive': return compare(a.isActive, b.isActive, isAsc);\n            default: return 0;\n          }\n        });\n        this.filteredData.paginator = this.paginator;\n      }\n      this.dataSource.data = data.sort((a, b) => {\n        const isAsc = sort.direction === 'asc';\n        switch (sort.active) {\n          case 'userName': return compare(a.userName.toLowerCase(), b.userName.toLowerCase(), isAsc);\n            case 'email': return compare(a.email, b.email, isAsc);\n            case 'designation': return compare(+a.designation, +b.designation, isAsc);\n            case 'branchName': return compare(a.branchName, b.branchName, isAsc);\n            case 'agencyName': return compare(a.agencyName, b.agencyName, isAsc);\n            case 'agencyCode': return compare(a.agencyCode, b.agencyCode, isAsc);\n            case 'userApplicationRole':\n            return compare((a.userApplicationRole.length === 0) ? '' :\n            a.userApplicationRole[0].roleName, (b.userApplicationRole.length === 0) ? '' :\n            b.userApplicationRole[0].roleName, isAsc);\n            case 'activationDate': return compare(a.activationDate, b.activationDate, isAsc);\n            case 'isActive': return compare(a.isActive, b.isActive, isAsc);\n            default: return 0;\n        }\n      });\n      this.dataSource.paginator = this.paginator;\n    }\n  }\n  createAgent() {\n    this.router.navigate(['../agentusers', 0, this.create], { relativeTo: this.activatedRoute });\n  }\n\n  getAgentUserList() {\n    this.agentUserDataService.getAgentUsers().subscribe((agentUsersList) => {\n      this.agentUserList = agentUsersList;\n      this.dataSource = new MatTableDataSource<Agentuserlistviewmodel>(this.agentUserList);\n      this.dataSource.paginator = this.paginator;\n      // this.dataSource.sort = this.sort;\n    });\n }\n deleteAgentUser(agentUserId) {\n  this.agentUserDataService.deleteAgentUser(agentUserId).subscribe((isDeleted) => {\n    this.isDeleted = isDeleted;\n  });\n}\n  GoUserDelete(value) {\n    const val = value.split(':');\n    const agentUserId = val[0];\n    this.dialogsService\n      .confirm('Confirm', 'Are you sure you want to delete this user?').subscribe(res => {\n        this.result = res;\n        if (this.result) {\n          // this.deleteAgentUser(agentUserId);\n          this.getAgentUserList();\n        } else {\n          this.actions = null;\n        }\n      });\n  }\n  GoUserUpdate(value) {\n    const val = value.split(':');\n    const agentUserId = val[0];\n    this.operation = val[1];\n    this.router.navigate(['../agentusers', agentUserId, this.operation.trim().toLowerCase()], { relativeTo: this.activatedRoute });\n  }\n\n}\nfunction compare(a, b, isAsc) {\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/user-mgmt/agent-user/agent-user-list/agent-user-list.component.ts","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/user-mgmt/hotel-user/hotel-type/hotel-type.component.css\n// module id = ../../../../../src/app/backoffice/user-mgmt/hotel-user/hotel-type/hotel-type.component.css\n// module chunks = user-mgmt.module","module.exports = \"<div class=\\\"container-fluid pt-4\\\">\\r\\n  <div class=\\\"customBreadcrumb mb-4\\\"><span>Hotel/Supplier </span><span>&gt;  Create New Hotel/Supplier User </span><span class=\\\"mandatoryInfo\\\">Indicates Mandatory Fields</span></div>\\r\\n  <h1 class=\\\"mainHeading mb-2\\\">Create New Hotel/Supplier User</h1>\\r\\n  <form #mgHotelForm=\\\"ngForm\\\">\\r\\n    <div class=\\\"row customeRow\\\">\\r\\n      <div class=\\\"form-group col-md-5 pt-4 mt-2\\\">\\r\\n        <div>\\r\\n          <label>Type</label>\\r\\n          <mat-radio-group class=\\\"d-flex\\\">\\r\\n            <mat-radio-button value=\\\"1\\\" [routerLink]=\\\"['hoteluserinfo',0,create]\\\" routerLinkActive=\\\"active\\\">Hotel Chain</mat-radio-button>\\r\\n            <mat-radio-button value=\\\"2\\\" [routerLink]=\\\"['individual',0,create]\\\" routerLinkActive=\\\"active\\\">Individual Hotels</mat-radio-button>\\r\\n            <mat-radio-button value=\\\"3\\\" [routerLink]=\\\"['supplieruser',0,create]\\\" routerLinkActive=\\\"active\\\">Supplier</mat-radio-button>\\r\\n          </mat-radio-group>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </form>\\r\\n</div>\\r\\n\\r\\n<div>\\r\\n  <div class=\\\"body-style\\\">\\r\\n    <router-outlet></router-outlet>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<!-- <div>\\r\\n  <app-hotel-type-nav-menu [hotelType] = \\\"hoteltype\\\"></app-hotel-type-nav-menu>\\r\\n</div>\\r\\n<div >\\r\\n  <div class=\\\"body-style\\\">\\r\\n    <router-outlet></router-outlet>\\r\\n  </div>\\r\\n</div> -->\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/user-mgmt/hotel-user/hotel-type/hotel-type.component.html\n// module id = ../../../../../src/app/backoffice/user-mgmt/hotel-user/hotel-type/hotel-type.component.html\n// module chunks = user-mgmt.module","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { CONSTANTS } from '../../../../common/constants';\n\n@Component({\n  selector: 'app-hotel-type',\n  templateUrl: './hotel-type.component.html',\n  styleUrls: ['./hotel-type.component.css']\n})\nexport class HotelTypeComponent implements OnInit {\n\n  edit = CONSTANTS.operation.edit;\n  create = CONSTANTS.operation.create;\n  read = CONSTANTS.operation.read;\n  operation: string;\n\n  constructor(private router: Router,\n    private activatedRoute: ActivatedRoute) { }\n\n  ngOnInit() {\n  }\n  \n}\n\n\n\n// WEBPACK FOOTER //\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/user-mgmt/hotel-user/hotel-type/hotel-type.component.ts","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/user-mgmt/hotel-user/hotel-user-info/hotel-user-info.component.css\n// module id = ../../../../../src/app/backoffice/user-mgmt/hotel-user/hotel-user-info/hotel-user-info.component.css\n// module chunks = user-mgmt.module","module.exports = \"<div class=\\\"container-fluid pt-1\\\">\\r\\n\\r\\n  <form [formGroup]=\\\"hotelUserForm\\\" (ngSubmit)=\\\"saveHotelUserDetails()\\\">\\r\\n    <div class=\\\"row customeRow alignItemCenter pb-1\\\">\\r\\n      <div class=\\\"form-group col-md-4 col-lg-3 mb-0\\\">\\r\\n        <mat-form-field>\\r\\n          <mat-select placeholder=\\\"Chain\\\" name=\\\"Chain\\\" formControlName=\\\"chainId\\\" (change)=\\\"getHotelBrands(hotelUserForm.get('chainId').value);\\\" required>\\r\\n            <mat-option [value]=\\\"null\\\"> Select </mat-option>\\r\\n            <mat-option *ngFor=\\\"let hotelchain of HotelchainList\\\" [value]=\\\"hotelchain.hotelChainId\\\">{{hotelchain.hotelChainName}}</mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div class=\\\"form-group col-md-4 col-lg-3 mb-0\\\">\\r\\n        <mat-form-field>\\r\\n          <mat-select placeholder=\\\"Brand\\\" name=\\\"Brand\\\" formControlName=\\\"brandIds\\\" (change)=\\\"getHotels(hotelUserForm.get('brandIds').value);\\\" multiple required>\\r\\n            <mat-option [value]=\\\"null\\\" *ngIf=\\\"isBrandList == true\\\"> All </mat-option>\\r\\n            <mat-option *ngFor=\\\"let hotelbrand of HotelbrandList\\\" [value]=\\\"hotelbrand.hotelBrandId\\\" aria-selected=\\\"true\\\">\\r\\n              {{hotelbrand.hotelBrandName}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div class=\\\"form-group col-md-4 col-lg-3 mb-0\\\">\\r\\n        <mat-form-field>\\r\\n          <mat-select placeholder=\\\"Hotel Name - ID\\\" name=\\\"Hotel Name - ID\\\" formControlName=\\\"hotelId\\\" (change)=\\\"selectAllHotels();\\\" multiple required>\\r\\n            <mat-option [value]=\\\"null\\\" *ngIf=\\\"isHotelList == true\\\" > All  </mat-option>\\r\\n            <mat-option *ngFor=\\\"let hotel of hotelNameList\\\" [value]=\\\"hotel.hotelId\\\">\\r\\n              {{hotel.hotelName}} - {{hotel.hotelCode}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row customeRow\\\">\\r\\n      <div class=\\\"col-md-2\\\">\\r\\n        <mat-icon class=\\\"userImage\\\">account_circle</mat-icon>\\r\\n        <button class=\\\"deletePhoto\\\" mat-raised-button title=\\\"Delete Image\\\"><i class=\\\"fa fa-times-thin\\\"></i></button>\\r\\n        <div class=\\\"image-upload\\\">\\r\\n          <label for=\\\"file-input\\\">\\r\\n            <img src=\\\"assets/uploadPhoto.png\\\" title=\\\"Upload Image\\\" />\\r\\n          </label>\\r\\n          <input id=\\\"file-input\\\" type=\\\"file\\\" />\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row customeRow\\\">\\r\\n      <div class=\\\"form-group col-md-4 col-lg-3\\\">\\r\\n        <mat-form-field class=\\\"example-full-width\\\">\\r\\n          <input matInput placeholder=\\\"User Name\\\" name=\\\"firstName\\\" formControlName=\\\"firstName\\\" required />\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div class=\\\"form-group col-md-4 col-lg-3\\\">\\r\\n        <mat-form-field>\\r\\n          <mat-select placeholder=\\\"Designation\\\" name=\\\"Designation\\\" formControlName=\\\"designationId\\\" required>\\r\\n            <mat-option *ngFor=\\\"let designation of designationList\\\" [value]=\\\"designation.designationId\\\">\\r\\n              {{designation.title}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row customeRow\\\">\\r\\n      <div class=\\\"form-group col-md-4 col-lg-3\\\">\\r\\n        <mat-form-field class=\\\"example-full-width\\\">\\r\\n          <input matInput placeholder=\\\"Email ID\\\" name=\\\"emailID\\\" formControlName=\\\"email\\\" pattern=\\\"\\\\w+@\\\\w+\\\\.\\\\w+(,\\\\s*\\\\w+@\\\\w+\\\\.\\\\w+)*\\\" required />\\r\\n        </mat-form-field>\\r\\n\\r\\n      </div>\\r\\n      <div class=\\\"form-group col-md-4 col-lg-3\\\">\\r\\n        <mat-form-field>\\r\\n          <mat-select placeholder=\\\"Role\\\" name=\\\"Role\\\" formControlName=\\\"extranetRoleId\\\" required>\\r\\n            <mat-option *ngFor=\\\"let role of roleList\\\" [value]=\\\"role.id\\\">\\r\\n              {{role.name}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row customeRow\\\">\\r\\n      <div class=\\\"col-md-3\\\">\\r\\n        <mat-form-field class=\\\"example-full-width\\\">\\r\\n          <input matInput [matDatepicker]=\\\"activationDate\\\" placeholder=\\\"Activation Date\\\" formControlName=\\\"activationDate\\\" [min]=\\\"(operation === create) ? todaysDate : minDate\\\"\\r\\n                 required>\\r\\n          <mat-datepicker-toggle matSuffix [for]=\\\"activationDate\\\">\\r\\n            <mat-icon matDatepickerToggleIcon>\\r\\n              <i class=\\\"fa fa-calendar\\\" aria-hidden=\\\"true\\\"></i>\\r\\n            </mat-icon>\\r\\n          </mat-datepicker-toggle>\\r\\n          <mat-datepicker #activationDate></mat-datepicker>\\r\\n\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12 controlButtons mt-5 mb-4\\\">\\r\\n        <button title=\\\"Save\\\" type=\\\"submit\\\" class=\\\"genericButton activeButton mat-primary mr-2\\\" [disabled]=\\\"!hotelUserForm.valid\\\" mat-raised-button>Save</button>\\r\\n        <button title=\\\"Cancel\\\" type=\\\"submit\\\" class=\\\"genericButton defaultButton\\\" (click)=\\\"cancel()\\\" mat-raised-button>Cancel</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </form>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/user-mgmt/hotel-user/hotel-user-info/hotel-user-info.component.html\n// module id = ../../../../../src/app/backoffice/user-mgmt/hotel-user/hotel-user-info/hotel-user-info.component.html\n// module chunks = user-mgmt.module","import { Component, OnInit, ChangeDetectorRef } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { HotelBrandViewModel } from '../../../../common/viewmodels/hotelbrandviewmodel';\nimport { HotelChainViewModel } from '../../../../common/viewmodels/hotelchainviewmodel';\nimport { CONSTANTS } from '../../../../common/constants';\nimport { FormGroup, FormControl, FormArray, Validators } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material';\nimport { HotelUserViewModel } from '../../../viewmodel/usersviewmodel/hoteluserinfoviewmodel';\nimport { HotelNameViewModel } from '../../../viewmodel/usersviewmodel/hotelnameviewmodel';\nimport { DesignationViewModel } from '../../../viewmodel/usersviewmodel/designationviewmodel';\nimport { MgRoleViewModel } from '../../../viewmodel/usersviewmodel/mgrolelistviewmodel';\nimport { BackofficeLookupService } from '../../../common/backoffice-shared/services/backoffice-lookup';\nimport { LookupService } from '../../../../common/shared/services/lookup.service';\nimport { UserDataService } from '../../../common/backoffice-shared/services/user-data.service';\n\n@Component({\n  selector: 'app-hotel-user-info',\n  templateUrl: './hotel-user-info.component.html',\n  styleUrls: ['./hotel-user-info.component.css']\n})\nexport class HotelUserInfoComponent implements OnInit {\n\n  HotelchainList: HotelChainViewModel[];\n  HotelbrandList: HotelBrandViewModel[];\n  hotelNameList: HotelNameViewModel[];\n  designationList: DesignationViewModel[];\n  roleList: MgRoleViewModel[];\n  public todaysDate = new Date();\n  hotelUser: HotelUserViewModel;\n  minDate: string;\n  userId: string;\n  edit = CONSTANTS.operation.edit;\n  create = CONSTANTS.operation.create;\n  read = CONSTANTS.operation.read;\n  hotelUserDetails: HotelUserViewModel = <HotelUserViewModel>{};\n  hotelUserForm: FormGroup;\n  allBrandIds: number[];\n  allHotelIds: string[];\n  isHotelList: boolean;\n  isBrandList: boolean;\n  operation: string;\n\n  constructor(private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private cd: ChangeDetectorRef,\n    private snackBar: MatSnackBar,\n    private lookupService: LookupService,\n    private userDataService: UserDataService,\n  private backOfficeLookUpService: BackofficeLookupService) { }\n\n  ngOnInit() {\n    this.operation = this.activatedRoute.snapshot.params['operation'];\n    this.userId = this.activatedRoute.snapshot.params['userId'];\n    this.getHotelChainList();\n    this.getDesignations();\n    this.getRoles();\n    this.allBrandIds = [0];\n    this.allHotelIds = [''];\n    this.isHotelList = false;\n    this.isBrandList = false;\n    this.hotelUserForm = new FormGroup({\n      chainId: new FormControl('', Validators.required),\n      brandIds: new FormControl('', Validators.required),\n      hotelId: new FormControl('', Validators.required),\n      firstName: new FormControl('', Validators.required),\n      designationId: new FormControl('', Validators.required),\n      email: new FormControl('', Validators.required),\n      extranetRoleId: new FormControl('', Validators.required),\n      activationDate: new FormControl('', Validators.required),\n    });\n\n    if (this.operation === 'edit') {\n      this.userDataService.getHotelUserById(this.userId).subscribe((hotelUser) => {\n        this.hotelUser = hotelUser;\n      });\n    }\n  }\n\n  getHotelChainList() {\n    this.lookupService.getHotelChains().subscribe((mghotelchainList) => {\n      this.HotelchainList = mghotelchainList;\n    });\n  }\n\n  getHotelBrands(chainId) {\n    this.lookupService.getHotelBrands(chainId).subscribe((mghotelbrandList) => {\n      this.HotelbrandList = mghotelbrandList;\n      this.isBrandList = true;\n    });\n\n  }\n\n  getDesignations() {\n    this.backOfficeLookUpService.getDesignationByType(CONSTANTS.userType.hoteluser).subscribe(designationData =>\n      this.designationList = designationData\n    );\n  }\n\n  getRoles() {\n    this.backOfficeLookUpService.getRolesByApplicationName(CONSTANTS.application.extranet).subscribe(data =>\n      this.roleList = data\n    );\n  }\n  selectAllHotels() {\n    // fetch all hotelIds from hotelsList\n    if (this.hotelNameList !== null) {\n      this.allHotelIds.splice(0 , this.allHotelIds.length);\n      for (let b = 0; b < this.hotelNameList.length; b++) {\n        this.allHotelIds[b] = this.hotelNameList[b].hotelId;\n      }\n      // select/deselect all hotels\n      if (this.hotelUserForm.value.hotelId.length !== 0) {\n        if (this.hotelUserForm.value.hotelId[0] == null && this.hotelUserForm.value.hotelId.length !== (this.allHotelIds.length + 1)) {\n            this.hotelUserForm.patchValue({hotelId: this.allHotelIds});\n        } else if (this.hotelUserForm.value.hotelId.length === (this.allHotelIds.length + 1)) {\n          this.hotelUserForm.patchValue({hotelId: null});\n        }\n     }\n    }\n }\n\n  getHotels(brandIds) {\n    // fetch all brandIds from brandsList\n    this.allBrandIds.splice(0 , this.allBrandIds.length);\n    for (let b = 0; b < this.HotelbrandList.length; b++) {\n      this.allBrandIds[b] = this.HotelbrandList[b].hotelBrandId;\n    }\n    // select/deselect all brands\n    if (brandIds.length !== (this.allBrandIds.length + 1) && brandIds.length !== 0) {\n        if (brandIds[0] == null) {\n          for (let b = 0; b < this.HotelbrandList.length; b++) {\n            brandIds[b] = this.HotelbrandList[b].hotelBrandId;\n            this.hotelUserForm.value.brandIds[b] = this.HotelbrandList[b].hotelBrandId;\n          }\n          this.hotelUserForm.patchValue({brandIds: brandIds});\n        }\n    } else if (brandIds.length === (this.allBrandIds.length + 1) && this.hotelNameList != null) {\n      this.hotelUserForm.patchValue({brandIds: null});\n      this.hotelNameList = null;\n      this.isHotelList = false;\n    }\n    // fetch hotels according to brandIds\n     if (brandIds.length >= 1 && brandIds[0] !== null) {\n       this.isHotelList = true;\n      this.backOfficeLookUpService.getHotelsByBrandIds(brandIds).subscribe(data =>\n      this.hotelNameList = data\n      );\n     }\n\n  }\n\n  saveHotelUserDetails() {\n    const hotelUser = Object.assign({}, this.hotelUserDetails, this.hotelUserForm.value);\n    hotelUser.userName = hotelUser.email;\n    if (hotelUser.activationDate === this.todaysDate.toISOString()) {\n      hotelUser.isActive = true;\n    } else {\n      hotelUser.isActive = false;\n    }\n    // hotelUser.deActivationDate = '';\n    hotelUser.createdBy = 'sa';\n    hotelUser.updatedBy = 'sa';\n    this.userDataService.createHotelUser(hotelUser as HotelUserViewModel)\n    .subscribe(data => {\n      this.snackBar.open('Hotel User Saved Successfully', '', { duration: 8000, verticalPosition: 'top', panelClass: 'showSnackBar'});\n      this.router.navigate(['/usermgmt/hoteluserslist']);\n    });\n\n  }\n\n  cancel() {\n    window.scrollTo(0, 0);\n    this.router.navigate(['/usermgmt/hoteluserslist']);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/user-mgmt/hotel-user/hotel-user-info/hotel-user-info.component.ts","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".usernameTH{width:15%;}\\r\\n.hotelIDTH{width: 14%;}\\r\\n.designationIDTH{width: 11%;}\\r\\n.emailTH{width: 15%;}\\r\\n.applicationRoleTH{width: 10%;}\\r\\n.activationTH{width: 15%;}\\r\\n.userStatusTH{width: 10%;}\\r\\n.userActionTH{width: 10%;}\\r\\n.expandHotelDetails {\\r\\n  position: absolute;\\r\\n  left: 39px;\\r\\n  width: 94%;\\r\\n  padding: 10px;\\r\\n  background: #fff;\\r\\n  overflow: auto;\\r\\n  border: 1px solid #ebebeb;\\r\\n  height: 105px;\\r\\n  margin-top: 42px;\\r\\n}\\r\\n.hotelIDTH a{\\r\\n    cursor: pointer;\\r\\n    color: #2aaae1;\\r\\n    text-decoration: underline;\\r\\n    font-size: 0.875rem;\\r\\n}\\r\\n\\r\\n.expandHotelTitle {\\r\\n  display: block;\\r\\n  z-index: 1;\\r\\n  position: absolute;\\r\\n  left: 39px;\\r\\n  width: 94%;\\r\\n  padding-top: 16px;\\r\\n}\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/user-mgmt/hotel-user/hotel-user-list/hotel-user-list.component.css\n// module id = ../../../../../src/app/backoffice/user-mgmt/hotel-user/hotel-user-list/hotel-user-list.component.css\n// module chunks = user-mgmt.module","module.exports = \"<div class=\\\"container-fluid pt-4\\\">\\n  <h1 class=\\\"mainHeading pb-2 mb-4 mt-2\\\">Hotel/Supplier</h1>\\n  <form [formGroup]=\\\"searchHotelUsers\\\" (ngSubmit)=\\\"findHotelUser(searchHotelUsers.get('searchText').value,searchHotelUsers.get('startDate').value,searchHotelUsers.get('endDate').value)\\\"\\n    class=\\\"w-100\\\">\\n    <div class=\\\"blueBackground pt-1 pb-1 pl-0 pr-2 alignItemCenter\\\">\\n      <div class=\\\"row formSections borderBottomNone p-0 m-1\\\">\\n\\n        <div class=\\\"col-md-2 d-flex pr-0\\\">\\n          <label class=\\\"optionsList mb-0 alignItemCenter pr-3\\\">From:</label>\\n          <mat-form-field>\\n            <mat-datepicker-toggle matSuffix [for]=\\\"startdate\\\">\\n              <mat-icon matDatepickerToggleIcon>\\n                <i class=\\\"fa fa-calendar\\\" aria-hidden=\\\"true\\\"></i>\\n              </mat-icon>\\n            </mat-datepicker-toggle>\\n            <input matInput [matDatepicker]=\\\"startdate\\\" placeholder=\\\"DD-MMM-YY\\\" formControlName=\\\"startDate\\\">\\n            <mat-datepicker #startdate></mat-datepicker>\\n          </mat-form-field>\\n        </div>\\n\\n        <div class=\\\"col-md-2 d-flex pr-2 pl-4\\\">\\n          <label class=\\\"optionsList mb-0 alignItemCenter pr-3\\\">To:</label>\\n          <mat-form-field>\\n            <mat-datepicker-toggle matSuffix [for]=\\\"enddate\\\">\\n              <mat-icon matDatepickerToggleIcon>\\n                <i class=\\\"fa fa-calendar\\\" aria-hidden=\\\"true\\\"></i>\\n              </mat-icon>\\n            </mat-datepicker-toggle>\\n            <input matInput [matDatepicker]=\\\"enddate\\\" placeholder=\\\"DD-MMM-YY\\\" formControlName=\\\"endDate\\\" [min]=\\\"searchHotelUsers.get('startDate').value\\\">\\n            <mat-datepicker #enddate></mat-datepicker>\\n          </mat-form-field>\\n        </div>\\n\\n        <div class=\\\"col-md-7 pl-4 pr-4\\\">\\n          <mat-form-field>\\n            <input matInput placeholder=\\\"Search by User Name, Email Id, Designation, Roles, Activation date \\\" formControlName=\\\"searchText\\\"\\n                   (keydown.backspace)=\\\"checkIsInputCleared()\\\">\\n          </mat-form-field>\\n        </div>\\n\\n        <div class=\\\"col-md-1 alignItemCenter pl-1 controlButtons\\\">\\n          <button title=\\\"Search\\\" type=\\\"submit\\\" class=\\\"genericButton genericSmallButton activeButton mat-primary\\\" mat-raised-button>Search</button>\\n        </div>\\n\\n      </div>\\n    </div>\\n  </form>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12 pt-4 mt-2 pb-3 mb-1 controlButtons\\\">\\n      <button title=\\\"Create New Hotel/Supplier User\\\" type=\\\"submit\\\" class=\\\"pt-2 pb-2 genericButton genericSmallButton defaultButton createNew\\\"\\n        mat-raised-button (click)=\\\"createHotelUser()\\\">\\n        <i class=\\\"fa fa-plus-circle\\\" aria-hidden=\\\"true\\\"></i>\\n        <span>Create New Hotel/Supplier User</span>\\n      </button>\\n    </div>\\n  </div>\\n\\n  <mat-table class=\\\"flexNone mb-2 genericTable\\\" #table [dataSource]='!isSearch ? dataSource: filteredData' matSort (matSortChange)=\\\"sortData($event)\\\"\\n    matSortActive=\\\"activationDate\\\" matSortDirection=\\\"desc\\\">\\n\\n\\n    <ng-container matColumnDef=\\\"userName\\\">\\n      <mat-header-cell class=\\\"usernameTH alignItemCenter pr-0\\\" *matHeaderCellDef mat-sort-header> User Name </mat-header-cell>\\n      <mat-cell class=\\\"usernameTH\\\" *matCellDef=\\\"let element\\\">\\n        <div class=\\\"d-flex\\\">\\n          <mat-icon class=\\\"userIcon alignItemCenter\\\">account_circle</mat-icon>\\n          <span class=\\\"d-flex pl-4 alignItemCenter\\\">{{element.userName}}</span>\\n        </div>\\n      </mat-cell>\\n    </ng-container>\\n\\n\\n    <ng-container matColumnDef=\\\"hotels\\\">\\n      <mat-header-cell class=\\\"hotelIDTH\\\" *matHeaderCellDef mat-sort-header> Hotel Name-ID </mat-header-cell>\\n      <mat-cell class=\\\"hotelIDTH\\\" *matCellDef=\\\"let element\\\">\\n        <ng-container *ngIf=\\\"element.hotels.length > 1\\\">\\n          <span class=\\\"d-block\\\">{{element.hotels[0].name}} - {{element.hotels[0].id}}</span>\\n          <a (click)=\\\"element.hideme = !element.hideme\\\">More</a>\\n          <span [hidden]=\\\"!element.hideme\\\" class=\\\"expandHotelTitle\\\">Hotel Name - ID</span>\\n          <div [hidden]=\\\"!element.hideme\\\" class=\\\"expandHotelDetails\\\">\\n              <ng-container *ngFor=\\\"let c of element.hotels; let first = first\\\">\\n                <span *ngIf=\\\"!first\\\">{{c.name}} - {{c.id}}  ,  </span>\\n              </ng-container>\\n          </div>\\n        </ng-container>\\n        <ng-container *ngIf=\\\"element.hotels.length==1\\\">\\n          <span class=\\\"d-block\\\">{{element.hotels[0].name}} - {{element.hotels[0].id}}</span>\\n        </ng-container>\\n      </mat-cell>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"designation\\\">\\n      <mat-header-cell class=\\\"designationIDTH\\\" *matHeaderCellDef mat-sort-header> Designation </mat-header-cell>\\n      <mat-cell class=\\\"designationIDTH\\\" *matCellDef=\\\"let element\\\"> {{element.designation}} </mat-cell>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"email\\\">\\n      <mat-header-cell class=\\\"emailTH\\\" *matHeaderCellDef mat-sort-header> Email ID </mat-header-cell>\\n      <mat-cell class=\\\"emailTH\\\" *matCellDef=\\\"let element\\\"> {{element.email}} </mat-cell>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"userApplicationRole\\\">\\n      <mat-header-cell class=\\\"applicationRoleTH\\\" *matHeaderCellDef mat-sort-header> Role(s)\\n      </mat-header-cell>\\n      <mat-cell class=\\\"applicationRoleTH\\\" *matCellDef=\\\"let element\\\">\\n        <ng-container *ngFor=\\\"let c of element.userApplicationRole\\\">\\n          <span class=\\\"d-block\\\"> {{c.roleName}}</span>\\n        </ng-container>\\n      </mat-cell>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"activationDate\\\">\\n      <mat-header-cell class=\\\"activationTH\\\" *matHeaderCellDef mat-sort-header>\\n        <span class=\\\"text-center\\\">\\n          <span class=\\\"d-block\\\">Activation/</span>Inactivation Date</span>\\n      </mat-header-cell>\\n      <mat-cell class=\\\"activationTH\\\" *matCellDef=\\\"let element\\\">\\n        <span class=\\\"d-block\\\">{{element.activationDate | date : \\\"dd-MMM-yy\\\"}}/</span>\\n        <ng-container *ngIf=\\\"!element.isActive\\\">\\n          {{element.deActivationDate | date : \\\"dd-MMM-yy\\\"}}\\n        </ng-container>\\n      </mat-cell>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"isActive\\\">\\n      <mat-header-cell class=\\\"userStatusTH noOutlineOnFocus\\\" *matHeaderCellDef mat-sort-header> Status </mat-header-cell>\\n      <mat-cell class=\\\"userStatusTH\\\" *matCellDef=\\\"let element\\\">\\n        <ng-container *ngIf=\\\"!element.isActive \\\">\\n          <i class=\\\"fa fa-circle inactive_status\\\" aria-hidden=\\\"true\\\"></i>InActive</ng-container>\\n        <ng-container *ngIf=\\\"element.isActive == true\\\">\\n          <i class=\\\"fa fa-circle active_status\\\" aria-hidden=\\\"true\\\"></i>Active\\n        </ng-container>\\n      </mat-cell>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"actions\\\" class=\\\"text-center\\\">\\n      <mat-header-cell class=\\\"userActionTH noOutlineOnFocus\\\" *matHeaderCellDef mat-sort-header> </mat-header-cell>\\n      <mat-cell class=\\\"userActionTH\\\" *matCellDef=\\\"let element\\\">\\n        <mat-select placeholder=\\\"Actions\\\" name=\\\"Actions\\\" [(ngModel)]=\\\"actions\\\">\\n          <ng-container *ngIf=\\\"element.isActive \\\">\\n              <!-- <mat-option value=\\\"{{element.id}}:edit:{{element.userType}}\\\" #edit (click)=\\\"GoUserUpdate(edit.value)\\\">Edit</mat-option> -->\\n            <mat-option value=\\\"{{element.id}}:edit:1\\\" #edit (click)=\\\"GoUserUpdate(edit.value)\\\">Edit</mat-option>\\n          </ng-container>\\n          <mat-option value=\\\"{{element.id}}:delete\\\" #delete (click)=\\\"GoUserDelete(delete.value)\\\">Delete</mat-option>\\n        </mat-select>\\n      </mat-cell>\\n    </ng-container>\\n\\n    <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n    <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" [style.padding-bottom]=\\\"row.hideme ? '144px': '0px'\\\"></mat-row>\\n\\n\\n  </mat-table>\\n\\n  <mat-paginator #paginator class=\\\"genericPagination\\\" [pageSize]=\\\"10\\\" [pageSizeOptions]=\\\"[5, 10, 20]\\\"></mat-paginator>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/user-mgmt/hotel-user/hotel-user-list/hotel-user-list.component.html\n// module id = ../../../../../src/app/backoffice/user-mgmt/hotel-user/hotel-user-list/hotel-user-list.component.html\n// module chunks = user-mgmt.module","\nimport { UserDataService } from './../../../common/backoffice-shared/services/user-data.service';\nimport { DatePipe } from '@angular/common';\nimport { HotelUserListViewModel } from './../../../viewmodel/usersviewmodel/hoteluserlistviewmodel';\nimport { DateAdapter, NativeDateAdapter, MAT_DATE_FORMATS } from '@angular/material/core';\nimport { Component, OnInit, ViewChild, Input } from '@angular/core';\nimport { CONSTANTS } from '../../../../common/constants';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { MatTableDataSource, MatPaginator, MatSort, Sort } from '@angular/material';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { DialogsService } from '../../../common/backoffice-shared/dialogs/dialogs.service';\n\n\nconst DATE_FORMATS = {\n  parse: {\n    dateInput: { month: 'short', year: 'numeric', day: 'numeric' }\n  },\n  display: {\n    dateInput: 'input',\n    monthYearLabel: { year: 'numeric', month: 'short' },\n    dateA11yLabel: { year: 'numeric', month: 'long', day: 'numeric' },\n    monthYearA11yLabel: { year: 'numeric', month: 'long' },\n  }\n};\n\nexport class DatePickerDateAdapter extends NativeDateAdapter {\n  format(date: Date, displayFormat: Object): string {\n    date.setMinutes((date.getTimezoneOffset() * -1));\n    if (displayFormat === 'input') {\n      const day = date.getDate();\n      const month = date.toLocaleString('en-us', { month: 'long' });\n      const year = date.getFullYear();\n      return this._to2digit(day) + '-' + month.substring(0, 3) + '-' + year % 100;\n    } else {\n      return date.toDateString();\n    }\n  }\n\n  private _to2digit(n: number) {\n    return ('00' + n).slice(-2);\n  }\n}\n\n@Component({\n  selector: 'app-hotel-user-list',\n  templateUrl: './hotel-user-list.component.html',\n  styleUrls: ['./hotel-user-list.component.css'],\n  providers: [DatePipe, DialogsService,\n    { provide: DateAdapter, useClass: DatePickerDateAdapter },\n    { provide: MAT_DATE_FORMATS, useValue: DATE_FORMATS },\n  ]\n})\nexport class HotelUserListComponent implements OnInit {\n  edit = CONSTANTS.operation.edit;\n  create = CONSTANTS.operation.create;\n  read = CONSTANTS.operation.read;\n  operation: string;\n  dataSource: MatTableDataSource<HotelUserListViewModel>;\n  displayedColumns = ['userName', 'hotels', 'designation', 'email', 'userApplicationRole', 'activationDate', 'isActive', 'actions'];\n  hotelUserList: HotelUserListViewModel[];\n  actions: string;\n  filteredData: MatTableDataSource<HotelUserListViewModel>;\n  searchHotelUsers: FormGroup;\n  isSearch: boolean;\n  selectedRow: number;\n  isAppRoleData: boolean;\n  isHotelData: boolean;\n  isDeleted: boolean;\n  hideme: any;\n  result: any;\n\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  @Input()\n  _dateValue;\n\n  hotel= {\n    ' kind ' : ' title ',\n    'label': 'ADD_TITLE' };\n\n  constructor(private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private userDataService: UserDataService,\n    private dialogsService: DialogsService,\n    public datepipe: DatePipe) { }\n\n  ngOnInit() {\n    this.getHotelUserList();\n    this.hideme = {};\n    this.isSearch = false;\n    this.searchHotelUsers = new FormGroup({\n      startDate: new FormControl(),\n      endDate: new FormControl(),\n      searchText: new FormControl()\n    });\n  }\n\n\n\n\n  getHotelUserList() {\n    this.userDataService.getHotelUsers().subscribe((mgUsersList) => {\n      this.hotelUserList = mgUsersList;\n      this.dataSource = new MatTableDataSource<HotelUserListViewModel>(this.hotelUserList);\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n    });\n  }\n\n  createHotelUser() {\n    this.router.navigate(['../hotelusers'], { relativeTo: this.activatedRoute });\n  }\n\n  findHotelUser( filterValue: string, filterFrom: string, filterTo: string ) {\n    if (filterFrom !== null || filterTo !== null || (filterValue !== null && filterValue.length >= 3)) {\n      this.isSearch = true;\n    }\n    if (filterFrom !== null) {\n      filterFrom = this.datepipe.transform(filterFrom, 'yyyy-MM-dd');\n    }\n    if (filterTo !== null) {\n      filterTo = this.datepipe.transform(filterTo, 'yyyy-MM-dd');\n    }\n    if (filterValue !== null) {\n      filterValue = filterValue.trim();\n      filterValue = filterValue.toLowerCase();\n    }\n\n    this.filteredData = new MatTableDataSource<HotelUserListViewModel>(this.hotelUserList.filter(user => {\n      const searchActivationDate = this.datepipe.transform(user.activationDate, 'dd-MMM-yy hh:mm a');\n      const activationDate = this.datepipe.transform(user.activationDate, 'yyyy-MM-dd');\n      if (filterValue !== null && (filterFrom === null && filterTo === null)) {\n        return this.filterHotelUser(user, filterValue) ||\n        searchActivationDate.toLowerCase().includes(filterValue);\n      } else if (filterFrom !== null && (filterTo === null && filterValue === null)) {\n        return activationDate >= filterFrom;\n      } else if (filterTo !== null && (filterFrom === null && filterValue === null)) {\n        return activationDate <= filterTo;\n      } else if (filterValue === null && (filterFrom !== null && filterTo !== null)) {\n        return filterFrom <= activationDate && activationDate <= filterTo;\n      } else if (filterFrom === null && (filterValue !== null && filterTo !== null)) {\n        return (this.filterHotelUser(user, filterValue) ||\n        searchActivationDate.toLowerCase().includes(filterValue)) && activationDate <= filterTo;\n      } else if (filterTo === null && (filterFrom !== null && filterValue !== null)) {\n        return (this.filterHotelUser(user, filterValue) ||\n        searchActivationDate.toLowerCase().includes(filterValue)) &&\n        activationDate >= filterFrom;\n      } else if (filterFrom !== null && filterTo !== null && filterValue !== null) {\n        return (this.filterHotelUser(user, filterValue) ||\n        searchActivationDate.toLowerCase().includes(filterValue)) &&\n          (filterFrom <= activationDate && activationDate <= filterTo);\n      }\n    }));\n    this.filteredData.paginator = this.paginator;\n    this.filteredData.sort = this.sort;\n\n  }\n  filterHotelUser( user: HotelUserListViewModel, filterValue: string) {\n    this.isAppRoleData = false;\n    for (let i = 0; i < user.userApplicationRole.length; i++) {\n      if (user.userApplicationRole[i].roleName.toLowerCase().includes(filterValue)) {\n        this.isAppRoleData = true;\n        break;\n      }\n    }\n    for (let j = 0; j < user.hotels.length; j++) {\n      if (user.hotels[j].name.toLowerCase().includes(filterValue)) {\n        this.isHotelData = true;\n      }\n    }\n\n    return user.userName.toLowerCase().includes(filterValue) ||\n    user.email.toLowerCase().includes(filterValue) ||\n    // user.designation.toLowerCase().includes(filterValue)\n    this.isAppRoleData || this.isHotelData ;\n\n  }\n  checkIsInputCleared() {\n    if (this.searchHotelUsers.get('searchText').value.length === 1) {\n      this.filteredData = new MatTableDataSource<HotelUserListViewModel>(this.hotelUserList);\n    }\n  }\n\n  sortData(sort: Sort) {\n    const data = this.hotelUserList.slice();\n    if (!sort.active || sort.direction === '') {\n      this.dataSource.data =  data.sort((a, b) => {\n        const isAsc = sort.direction === 'desc';\n           return compare(a.activationDate, b.activationDate, isAsc);\n      });\n      return;\n    } else {\n      if (this.isSearch) {\n        this.filteredData.data = this.filteredData.data.sort((a, b) => {\n          const isAsc = sort.direction === 'asc';\n          switch (sort.active) {\n            // case 'name': return compare(a.firstName, b.firstName, isAsc);\n            case 'name': return compare(a.userName, b.userName, isAsc);\n            case 'email': return compare(a.email, b.email, isAsc);\n            case 'hotels':\n            return compare((a.hotels.length === 0) ? '' :\n            a.hotels[0].name, (b.hotels.length === 0) ? '' :\n            b.hotels[0].name, isAsc);\n            case 'isActive': return compare(a.isActive, b.isActive, isAsc);\n            case 'userApplicationRole':\n            return compare((a.userApplicationRole.length === 0) ? '' :\n            a.userApplicationRole[0].roleName, (b.userApplicationRole.length === 0) ? '' :\n            b.userApplicationRole[0].roleName, isAsc);\n            case 'activationDate': return compare(a.activationDate, b.activationDate, isAsc);\n            default: return 0;\n          }\n        });\n        this.filteredData.paginator = this.paginator;\n      }\n        this.dataSource.data = data.sort((a, b) => {\n          const isAsc = sort.direction === 'asc';\n          switch (sort.active) {\n            // case 'name': return compare(a.firstName, b.firstName, isAsc);\n            case 'name': return compare(a.userName, b.userName, isAsc);\n            case 'email': return compare(a.email, b.email, isAsc);\n            case 'hotels':\n            return compare((a.hotels.length === 0) ? '' :\n            a.hotels[0].name, (b.hotels.length === 0) ? '' :\n            b.hotels[0].name, isAsc);\n            case 'isActive': return compare(a.isActive, b.isActive, isAsc);\n            case 'userApplicationRole':\n            return compare((a.userApplicationRole.length === 0) ? '' :\n            a.userApplicationRole[0].roleName, (b.userApplicationRole.length === 0) ? '' :\n            b.userApplicationRole[0].roleName, isAsc);\n            case 'activationDate': return compare(a.activationDate, b.activationDate, isAsc);\n            default: return 0;\n          }\n        });\n        this.dataSource.paginator = this.paginator;\n      }\n    }\n\n\n  GoUserUpdate(value) {\n    const val = value.split(':');\n    const userId = val[0];\n    this.operation = val[1];\n    const userType = val[2];\n    if (userType === '1') {\n      this.router.navigate(['../hoteluserinfo', userId, this.operation.trim().toLowerCase()], { relativeTo: this.activatedRoute });\n    } else if (userType === '2') {\n      this.router.navigate(['../individual', userId, this.operation.trim().toLowerCase()], { relativeTo: this.activatedRoute });\n    }\n\n  }\n\n  deleteHotelUser(userId) {\n    this.userDataService.deleteHotelUser(userId).subscribe((isDeleted) => {\n      this.isDeleted = isDeleted;\n    });\n  }\n\n  GoUserDelete(value) {\n    const val = value.split(':');\n    const userId = val[0];\n    this.dialogsService\n      .confirm('Confirm', 'Are you sure you want to delete this user?').subscribe(res => {\n        this.result = res;\n        if (this.result) {\n          // this.deleteHotelUser(userId);\n          this.getHotelUserList();\n        } else {\n          this.actions = null;\n        }\n      });\n   }\n}\nfunction compare(a, b, isAsc) {\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n}\n\n\n\n\n// WEBPACK FOOTER //\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/user-mgmt/hotel-user/hotel-user-list/hotel-user-list.component.ts","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/user-mgmt/hotel-user/individual-hotel-user-info/individual-hotel-user-info.component.css\n// module id = ../../../../../src/app/backoffice/user-mgmt/hotel-user/individual-hotel-user-info/individual-hotel-user-info.component.css\n// module chunks = user-mgmt.module","module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n  <form [formGroup]=\\\"individualHotelForm\\\" (ngSubmit)=\\\"saveIndividualHotelUserDetails()\\\">\\r\\n    <div class=\\\"row customeRow\\\">\\r\\n      <div class=\\\"form-group col-md-4 col-lg-3 mb-0\\\">\\r\\n        <mat-form-field>\\r\\n          <mat-select placeholder=\\\"Hotel Name - ID\\\" name=\\\"Hotel Name - ID\\\" formControlName=\\\"hotelId\\\" multiple required>\\r\\n            <mat-option [value]=\\\"null\\\"> Select </mat-option>\\r\\n            <mat-option *ngFor=\\\"let hotel of hotelList\\\" [value]=\\\"hotel.hotelId\\\">{{hotel.hotelName}} - {{hotel.hotelCode}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row customeRow\\\">\\r\\n      <div class=\\\"col-md-2\\\">\\r\\n        <mat-icon class=\\\"userImage\\\">account_circle</mat-icon>\\r\\n        <button class=\\\"deletePhoto\\\" mat-raised-button title=\\\"Delete Image\\\">\\r\\n          <i class=\\\"fa fa-times-thin\\\"></i>\\r\\n        </button>\\r\\n        <div class=\\\"image-upload\\\">\\r\\n          <label for=\\\"file-input\\\">\\r\\n            <img src=\\\"assets/uploadPhoto.png\\\" title=\\\"Upload Image\\\" />\\r\\n          </label>\\r\\n          <input id=\\\"file-input\\\" type=\\\"file\\\" />\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row customeRow\\\">\\r\\n      <div class=\\\"form-group col-md-4 col-lg-3\\\">\\r\\n        <mat-form-field class=\\\"example-full-width\\\">\\r\\n          <input matInput placeholder=\\\"User Name\\\" id=\\\"userName\\\" formControlName=\\\"userName\\\" required />\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div class=\\\"form-group col-md-4 col-lg-3\\\">\\r\\n        <mat-form-field>\\r\\n          <mat-select placeholder=\\\"Designation\\\" formControlName=\\\"designationId\\\" required>\\r\\n            <mat-option [value]=\\\"null\\\">Select</mat-option>\\r\\n            <mat-option *ngFor=\\\"let designation of designationList\\\" [value]=\\\"designation.designationId\\\">{{designation.title}}</mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row customeRow\\\">\\r\\n      <div class=\\\"form-group col-md-4 col-lg-3\\\">\\r\\n        <mat-form-field class=\\\"example-full-width\\\">\\r\\n          <input matInput placeholder=\\\"Email ID\\\" id=\\\"emailID\\\" formControlName=\\\"email\\\" pattern=\\\"\\\\w+@\\\\w+\\\\.\\\\w+(,\\\\s*\\\\w+@\\\\w+\\\\.\\\\w+)*\\\" required />\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div class=\\\"form-group col-md-4 col-lg-3\\\">\\r\\n        <mat-form-field>\\r\\n          <mat-select placeholder=\\\"Role\\\" formControlName=\\\"extranetRoleId\\\" required>\\r\\n            <mat-option [value]=\\\"null\\\">Select</mat-option>\\r\\n            <mat-option *ngFor=\\\"let role of roleList\\\" [value]=\\\"role.id\\\">{{role.name}}</mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row customeRow\\\">\\r\\n      <div class=\\\"col-md-3\\\">\\r\\n        <mat-form-field class=\\\"example-full-width\\\">\\r\\n          <input matInput [matDatepicker]=\\\"activationDate\\\" placeholder=\\\"Activation Date\\\" formControlName=\\\"activationDate\\\"\\r\\n              [min]=\\\"(operation === create) ?  todaysDate : minDate\\\" required>\\r\\n            <mat-datepicker-toggle matSuffix [for]=\\\"activationDate\\\">\\r\\n                <mat-icon matDatepickerToggleIcon>\\r\\n                  <i class=\\\"fa fa-calendar\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                </mat-icon>\\r\\n            </mat-datepicker-toggle>\\r\\n            <mat-datepicker #activationDate></mat-datepicker>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12 controlButtons mt-5 mb-4\\\">\\r\\n        <button title=\\\"Save\\\" type=\\\"submit\\\" class=\\\"genericButton activeButton mat-primary mr-2\\\" [disabled]=\\\"!individualHotelForm.valid\\\" mat-raised-button>Save</button>\\r\\n        <button title=\\\"Cancel\\\" type=\\\"submit\\\" class=\\\"genericButton defaultButton\\\" mat-raised-button (click)=\\\"cancel()\\\">Cancel</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </form>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/user-mgmt/hotel-user/individual-hotel-user-info/individual-hotel-user-info.component.html\n// module id = ../../../../../src/app/backoffice/user-mgmt/hotel-user/individual-hotel-user-info/individual-hotel-user-info.component.html\n// module chunks = user-mgmt.module","import { Component, OnInit, Output } from '@angular/core';\nimport { DesignationViewModel } from '../../../viewmodel/usersviewmodel/designationviewmodel';\nimport { MgRoleViewModel } from '../../../viewmodel/usersviewmodel/mgrolelistviewmodel';\nimport { CONSTANTS } from '../../../../common/constants';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { BackofficeLookupService } from '../../../common/backoffice-shared/services/backoffice-lookup';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { UserDataService } from '../../../common/backoffice-shared/services/user-data.service';\nimport { MatSnackBar } from '@angular/material';\nimport { HotelUserViewModel } from '../../../viewmodel/usersviewmodel/hoteluserinfoviewmodel';\nimport { HotelNameViewModel } from '../../../viewmodel/usersviewmodel/hotelnameviewmodel';\nimport { UserProfileService } from '../../../../common/shared/services/user-profile.service';\n\n@Component({\n  selector: 'app-individual-hotel-user-info',\n  templateUrl: './individual-hotel-user-info.component.html',\n  styleUrls: ['./individual-hotel-user-info.component.css']\n})\nexport class IndividualHotelUserInfoComponent implements OnInit {\n\n  designationList: DesignationViewModel[];\n  hotelList: HotelNameViewModel[];\n  roleList: MgRoleViewModel[];\n  individualHotelForm: FormGroup;\n  edit = CONSTANTS.operation.edit;\n  create = CONSTANTS.operation.create;\n  read = CONSTANTS.operation.read;\n  operation: string;\n  mgHotelViewModel: HotelUserViewModel= <HotelUserViewModel>{};\n  todaysDate = new Date();\n  minDate: string;\n  userId: string;\n  @Output()\n  Checked: boolean;\n\n\n  constructor(private backOfficeLookUpService: BackofficeLookupService,\n              private activatedRoute: ActivatedRoute,\n              private userDataService: UserDataService,\n              private snackBar: MatSnackBar,\n              private router: Router,\n              private userProfileService: UserProfileService) { }\n\n  ngOnInit() {\n\n    this.operation = this.activatedRoute.snapshot.params['operation'];\n    this.userId = this.activatedRoute.snapshot.params['id'];\n    this.individualHotelForm = new FormGroup({\n      hotelId: new FormControl('', Validators.required),\n      userName: new FormControl('', Validators.required),\n      designationId: new FormControl('', Validators.required),\n      email: new FormControl('', Validators.required),\n      extranetRoleId: new FormControl('', Validators.required),\n      activationDate: new FormControl('', Validators.required),\n    });\n\n    if (this.operation.toLowerCase().trim() === this.edit) {\n        this.Checked = true;\n        this.getIndividualHotelUser(this.userId);\n     }\n\n    this.getDesignations();\n    this.getRoles();\n    this.getHotels();\n\n  }\n\n  getDesignations() {\n    this.designationList = this.activatedRoute.snapshot.data['designations'];\n  }\n\n  getRoles() {\n    this.roleList = this.activatedRoute.snapshot.data['roles'];\n  }\n\n  getHotels() {\n      this.hotelList = this.activatedRoute.snapshot.data['hotels'];\n  }\n\n  saveIndividualHotelUserDetails() {\n\n    const individualHotelUser = Object.assign({}, this.mgHotelViewModel, this.individualHotelForm.value);\n\n    if (individualHotelUser.activationDate.toISOString() > this.todaysDate.toISOString()) {\n      individualHotelUser.isActive = false;\n    } else {\n      individualHotelUser.isActive = true;\n    }\n    individualHotelUser.createdBy = this.userProfileService.GetBasicUserInfo().FirstName + ' ' +\n                                    this.userProfileService.GetBasicUserInfo().LastName;\n    individualHotelUser.updatedBy = this.userProfileService.GetBasicUserInfo().FirstName + ' ' +\n                                    this.userProfileService.GetBasicUserInfo().LastName;\n    individualHotelUser.userName = individualHotelUser.email;\n\n      if (this.operation === this.create) {\n      this.userDataService.createHotelUser(individualHotelUser as HotelUserViewModel)\n      .subscribe(data => {\n        window.scrollTo(0, 0);\n        this.snackBar.open('New user is created successfully', '', { duration: 8000, verticalPosition: 'top', panelClass: 'showSnackBar'});\n        this.router.navigate(['/usermgmt/hoteluserslist']);\n      });\n     }\n  }\n\n  cancel() {\n    window.scrollTo(0, 0);\n    this.router.navigate(['/usermgmt/hoteluserslist']);\n  }\n\n  getIndividualHotelUser(userId) {\n    this.userDataService.getHotelUserById(userId).subscribe(\n      (individualHotelUserData) => {\n          this.individualHotelForm.get('userName').setValue(individualHotelUserData.userName);\n          this.individualHotelForm.get('email').setValue(individualHotelUserData.email);\n          this.individualHotelForm.get('extranetRoleId').setValue(individualHotelUserData.extranetRoleId);\n          this.individualHotelForm.get('designationId').setValue(individualHotelUserData.designationId);\n          this.individualHotelForm.get('activationDate').setValue(individualHotelUserData.activationDate);\n          this.individualHotelForm.get('hotelId').setValue(individualHotelUserData.hotelId);\n      }\n    );\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/user-mgmt/hotel-user/individual-hotel-user-info/individual-hotel-user-info.component.ts","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/user-mgmt/hotel-user/supplier-user-info/supplier-user-info.component.css\n// module id = ../../../../../src/app/backoffice/user-mgmt/hotel-user/supplier-user-info/supplier-user-info.component.css\n// module chunks = user-mgmt.module","module.exports = \"<div class=\\\"container-fluid\\\" style=\\\"-webkit-filter: blur(2px);\\r\\nfilter: blur(2px); pointer-events: none;\\\">\\r\\n  <form [formGroup]=\\\"individualHotelForm\\\">\\r\\n\\r\\n    <div class=\\\"row customeRow\\\">\\r\\n      <div class=\\\"form-group col-md-4 col-lg-3 mb-0\\\">\\r\\n        <mat-select placeholder=\\\"Supplier\\\" name=\\\"Supplier\\\" required>\\r\\n          <mat-option [value]=\\\"null\\\"> Select </mat-option>\\r\\n          <mat-option [value]=\\\"1\\\"> select </mat-option>\\r\\n        </mat-select>\\r\\n      </div>\\r\\n      <div class=\\\"form-group col-md-4 col-lg-3 mb-0\\\">\\r\\n        <mat-form-field>\\r\\n          <input type=\\\"text\\\" matInput placeholder=\\\"Search by Hotel Name/Code\\\" formControlName=\\\"hotelNameId\\\" [matAutocomplete]=\\\"auto\\\">\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row customeRow\\\">\\r\\n      <div class=\\\"col-md-2\\\">\\r\\n        <mat-icon class=\\\"userImage\\\">account_circle</mat-icon>\\r\\n        <button class=\\\"deletePhoto\\\" mat-raised-button title=\\\"Delete Image\\\">\\r\\n          <i class=\\\"fa fa-times-thin\\\"></i>\\r\\n        </button>\\r\\n        <div class=\\\"image-upload\\\">\\r\\n          <label for=\\\"file-input\\\">\\r\\n            <img src=\\\"assets/uploadPhoto.png\\\" title=\\\"Upload Image\\\" />\\r\\n          </label>\\r\\n          <input id=\\\"file-input\\\" type=\\\"file\\\" />\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row customeRow\\\">\\r\\n      <div class=\\\"form-group col-md-4 col-lg-3\\\">\\r\\n        <mat-form-field class=\\\"example-full-width\\\">\\r\\n          <input matInput placeholder=\\\"User Name\\\" id=\\\"userName\\\" formControlName=\\\"userName\\\" required />\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div class=\\\"form-group col-md-4 col-lg-3\\\">\\r\\n        <mat-form-field>\\r\\n          <mat-select placeholder=\\\"Designation\\\" formControlName=\\\"designation\\\" required>\\r\\n            <mat-option [value]=\\\"null\\\">Select</mat-option>\\r\\n            <mat-option *ngFor=\\\"let designation of designationList\\\" [value]=\\\"designation.designationId\\\">{{designation.title}}</mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <div class=\\\"row customeRow\\\">\\r\\n      <div class=\\\"form-group col-md-4 col-lg-3\\\">\\r\\n        <mat-form-field class=\\\"example-full-width\\\">\\r\\n          <input matInput placeholder=\\\"Email ID\\\" id=\\\"emailID\\\" formControlName=\\\"email\\\" required />\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div class=\\\"form-group col-md-4 col-lg-3\\\">\\r\\n        <mat-form-field>\\r\\n          <mat-select placeholder=\\\"Role\\\" formControlName=\\\"role\\\" required>\\r\\n            <mat-option [value]=\\\"null\\\">Select</mat-option>\\r\\n            <mat-option *ngFor=\\\"let role of roleList\\\" [value]=\\\"role.id\\\">{{role.name}}</mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row customeRow\\\">\\r\\n      <div class=\\\"col-md-3\\\">\\r\\n        <mat-form-field class=\\\"example-full-width\\\">\\r\\n          <input matInput [matDatepicker]=\\\"activationDate\\\" placeholder=\\\"Activation Date\\\" formControlName=\\\"activationDate\\\"\\r\\n                 [min]=\\\"(operation === create) ? (agentForm.get('activationDate').value || todaysDate) : minDate\\\"\\r\\n                 required>\\r\\n          <mat-datepicker-toggle matSuffix [for]=\\\"activationDate\\\">\\r\\n            <mat-icon matDatepickerToggleIcon>\\r\\n              <i class=\\\"fa fa-calendar\\\" aria-hidden=\\\"true\\\"></i>\\r\\n            </mat-icon>\\r\\n          </mat-datepicker-toggle>\\r\\n          <mat-datepicker #activationDate></mat-datepicker>\\r\\n\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12 controlButtons mt-5 mb-4\\\">\\r\\n        <button title=\\\"Save\\\" type=\\\"submit\\\" class=\\\"genericButton activeButton mat-primary mr-2\\\" mat-raised-button>Save</button>\\r\\n        <button title=\\\"Cancel\\\" type=\\\"submit\\\" class=\\\"genericButton defaultButton\\\" mat-raised-button>Cancel</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </form>\\r\\n\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/user-mgmt/hotel-user/supplier-user-info/supplier-user-info.component.html\n// module id = ../../../../../src/app/backoffice/user-mgmt/hotel-user/supplier-user-info/supplier-user-info.component.html\n// module chunks = user-mgmt.module","import { Component, OnInit } from '@angular/core';\nimport { DesignationViewModel } from '../../../viewmodel/usersviewmodel/designationviewmodel';\nimport { MgRoleViewModel } from '../../../viewmodel/usersviewmodel/mgrolelistviewmodel';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { CONSTANTS } from '../../../../common/constants';\nimport { BackofficeLookupService } from '../../../common/backoffice-shared/services/backoffice-lookup';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-supplier-user-info',\n  templateUrl: './supplier-user-info.component.html',\n  styleUrls: ['./supplier-user-info.component.css']\n})\nexport class SupplierUserInfoComponent implements OnInit {\n\n  designationList: DesignationViewModel[];\n  roleList: MgRoleViewModel[];  \n  individualHotelForm : FormGroup;\n  edit = CONSTANTS.operation.edit;\n  create = CONSTANTS.operation.create;\n  read = CONSTANTS.operation.read;\n  \n  constructor(private backOfficeLookUpService: BackofficeLookupService,\n              private activatedRoute: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.individualHotelForm = new FormGroup({\n      hotelNameId: new FormControl,\n      userName: new FormControl('', Validators.required),\n      designation: new FormControl('', Validators.required),\n      email: new FormControl('', Validators.required),\n      role: new FormControl('', Validators.required),\n      activationDate: new FormControl('', Validators.required),\n    });\n\n    this.getDesignations();\n    this.getRoles();\n  }\n\n  getDesignations() {\n    this.designationList = this.activatedRoute.snapshot.data['designations'];\n  }\n\n  getRoles() {\n    this.roleList = this.activatedRoute.snapshot.data['roles'];    \n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/user-mgmt/hotel-user/supplier-user-info/supplier-user-info.component.ts","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\\r\\n.transparent-circle span:before{\\r\\n    top:-11px;\\r\\n}\\r\\n\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/user-mgmt/mg-user/mg-user-info/mg-user-info.component.css\n// module id = ../../../../../src/app/backoffice/user-mgmt/mg-user/mg-user-info/mg-user-info.component.css\n// module chunks = user-mgmt.module","module.exports = \"<div class=\\\"container-fluid pt-4\\\">\\r\\n  <div class=\\\"customBreadcrumb mb-4\\\">\\r\\n    <span>MG </span>\\r\\n    <span *ngIf=\\\"operation == 'create'\\\">&gt; Create New MG User</span>\\r\\n    <span *ngIf=\\\"operation == 'edit'\\\">&gt; Edit MG User</span>\\r\\n    <span class=\\\"mandatoryInfo\\\">Indicates Mandatory Fields</span>\\r\\n  </div>\\r\\n  <h1 *ngIf=\\\"operation == 'create'\\\" class=\\\"mainHeading mb-2\\\">Create New User</h1>\\r\\n  <h1 *ngIf=\\\"operation == 'edit'\\\" class=\\\"mainHeading mb-2\\\">Edit User</h1>\\r\\n  <form [formGroup]=\\\"mgUserForm\\\" (ngSubmit)=\\\"saveUser()\\\">\\r\\n  <div class=\\\"row customeRow\\\">\\r\\n    <div class=\\\"col-md-2\\\">\\r\\n      <mat-icon class=\\\"userImage\\\">account_circle</mat-icon>\\r\\n      <button class=\\\"deletePhoto\\\" mat-raised-button title=\\\"Delete Image\\\">\\r\\n        <i class=\\\"fa fa-times-thin\\\"></i>\\r\\n      </button>\\r\\n      <div class=\\\"image-upload\\\">\\r\\n        <label for=\\\"file-input\\\">\\r\\n          <img src=\\\"assets/uploadPhoto.png\\\" title=\\\"Upload Image\\\" />\\r\\n        </label>\\r\\n        <input id=\\\"file-input\\\" type=\\\"file\\\" />\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row customeRow formSections p-0 borderBottomNone\\\">\\r\\n    <div class=\\\"form-group col-md-4 col-lg-3 mb-0\\\">\\r\\n      <mat-form-field>\\r\\n        <input matInput placeholder=\\\"User Name\\\" formControlName=\\\"userName\\\" id=\\\"userName\\\" required />\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n    <div class=\\\"form-group col-md-4 col-lg-3 mb-0\\\">\\r\\n      <mat-form-field>\\r\\n        <input matInput placeholder=\\\"Employee ID\\\" formControlName=\\\"employeeId\\\" id=\\\"employeeID\\\" required />\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row customeRow formSections p-0 borderBottomNone\\\">\\r\\n\\r\\n    <div class=\\\"form-group col-md-4 col-lg-3\\\">\\r\\n      <mat-form-field>\\r\\n        <input matInput placeholder=\\\"Email ID\\\" formControlName=\\\"email\\\" id=\\\"email\\\" required />\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n    <div class=\\\"form-group col-md-4 col-lg-3\\\">\\r\\n      <mat-form-field>\\r\\n        <mat-select placeholder=\\\"Department(s)\\\" name=\\\"department\\\" formControlName=\\\"departments\\\" multiple required>\\r\\n          <mat-option *ngFor=\\\"let department of departmentList\\\" [value]=\\\"department.id\\\">{{department.name}}</mat-option>\\r\\n        </mat-select>\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div formArrayName=\\\"userApplicationRole\\\" *ngFor=\\\"let appRole of userApplicationRole.controls; let i =index\\\">\\r\\n\\r\\n    <div [formGroupName]=\\\"i\\\">\\r\\n      <div class=\\\"row customeRow formSections p-0 borderBottomNone alignItemCenter\\\">\\r\\n        <div class=\\\"form-group col-md-4 col-lg-3 mb-0\\\">\\r\\n          <mat-form-field>\\r\\n            <mat-select formControlName=\\\"applicationId\\\" placeholder=\\\"Application\\\" (change)=\\\"getRolesForApplication(i)\\\" required >\\r\\n                <mat-option [value]=\\\"null\\\">Select</mat-option>\\r\\n              <ng-container *ngFor=\\\"let app of applicationList\\\">\\r\\n                <mat-option [value]=\\\"app.id\\\">{{app.name}}</mat-option>\\r\\n              </ng-container>\\r\\n            </mat-select>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n        <div class=\\\"form-group col-md-4 col-lg-3 mb-0\\\">\\r\\n          <mat-form-field>\\r\\n            <mat-select formControlName=\\\"roleId\\\" placeholder=\\\"Roles\\\"  required>\\r\\n                <mat-option [value]=\\\"null\\\">Select</mat-option>\\r\\n              <ng-container *ngFor=\\\"let role of this.appRolesListArray[i] \\\">\\r\\n                <mat-option [value]=\\\"role.id\\\">{{role.name}}</mat-option>\\r\\n              </ng-container>\\r\\n            </mat-select>\\r\\n        </mat-form-field>\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"col-md-2 pl-0\\\">\\r\\n      <span class=\\\"btn transparent-circle mr-2\\\" title=\\\"Add\\\" [hidden]='isMaxLength' (click)=\\\"addAppRole()\\\"><span></span></span>\\r\\n\\t\\t<ng-container *ngIf=\\\"i > 0\\\">\\r\\n        <span class=\\\"btn transparent-circle\\\" title=\\\"Delete\\\" (click)=\\\"deleteAppRole(i)\\\"><i aria-hidden=\\\"true\\\" class=\\\"fa fa-times-thin\\\"></i></span>\\r\\n      </ng-container>\\r\\n\\t</div>\\r\\n  </div>\\r\\n</div>\\r\\n</div>\\r\\n<div>\\r\\n<mat-error *ngIf=\\\"mgUserForm.get('userApplicationRole').errors && mgUserForm.get('userApplicationRole').errors.ValidateAppRole\\\">\\r\\n  This app type is already selected.\\r\\n </mat-error>\\r\\n\\r\\n <mat-error *ngIf=\\\"mgUserForm.get('userApplicationRole').errors && mgUserForm.get('userApplicationRole').errors.ValidateAppRoleNotNull\\\">\\r\\n  Role needs to be selected\\r\\n </mat-error>\\r\\n\\r\\n</div>\\r\\n\\r\\n  <div class=\\\"row customeRow formSections p-0 borderBottomNone\\\">\\r\\n    <div class=\\\"form-group col-md-3 pt-3 mb-0\\\">\\r\\n      <mat-form-field>\\r\\n        <input matInput [matDatepickerFilter]=\\\"myFilter\\\" [matDatepicker]=\\\"picker\\\" placeholder=\\\"Activation Date\\\" formControlName=\\\"activationDate\\\" required>\\r\\n        <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\">\\r\\n        <mat-icon matDatepickerToggleIcon>\\r\\n          <i class=\\\"fa fa-calendar\\\" aria-hidden=\\\"true\\\"></i>\\r\\n        </mat-icon>\\r\\n      </mat-datepicker-toggle>\\r\\n        <mat-datepicker #picker></mat-datepicker>\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n  </div>\\r\\n\\t<div class=\\\"row\\\">\\r\\n\\t  <div class=\\\"controlButtons pl-3 mt-5 mb-4\\\">\\r\\n\\t\\t<button title=\\\"Save\\\" type=\\\"submit\\\" class=\\\"genericButton activeButton mat-primary mr-2\\\" mat-raised-button>Save</button>\\r\\n\\t\\t<button title=\\\"Cancel\\\" type=\\\"button\\\" class=\\\"genericButton defaultButton\\\" mat-raised-button (click)=\\\"cancel()\\\">Cancel</button>\\r\\n\\t  </div>\\r\\n  </div>\\r\\n</form>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/user-mgmt/mg-user/mg-user-info/mg-user-info.component.html\n// module id = ../../../../../src/app/backoffice/user-mgmt/mg-user/mg-user-info/mg-user-info.component.html\n// module chunks = user-mgmt.module","import { Component, OnInit, ChangeDetectorRef } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { MgApplicationViewModel } from '../../../viewmodel/usersviewmodel/mgapplicationlistviewmodel';\nimport { DepartmentViewModel } from '../../../viewmodel/usersviewmodel/departmentviewmodel';\nimport { CONSTANTS } from '../../../../common/constants';\nimport { FormGroup, FormControl, FormArray, AbstractControl } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material';\nimport { UserDataService } from '../../../common/backoffice-shared/services/user-data.service';\nimport { MgUserViewModel } from '../../../viewmodel/usersviewmodel/mguserviewmodel';\nimport { Observable } from 'rxjs/Observable';\nimport { MgRoleViewModel } from '../../../viewmodel/usersviewmodel/mgrolelistviewmodel';\nimport { BackofficeLookupService } from '../../../common/backoffice-shared/services/backoffice-lookup';\nimport {UserProfileService} from '../../../../common/shared/services/user-profile.service';\nimport { ApplicationRoleIdViewModel } from '../../../viewmodel/usersviewmodel/applicationroleidviewmodel';\n\nfunction ValidateAppRole(control: AbstractControl): { [key: string]: boolean } | null {\n  const appRoleList = control;\n  if ((appRoleList.value !== undefined) && (appRoleList.value !== null) &&\n    (appRoleList.value.length > 0)) {\n\n    const appList = [];\n\n    const appRoleArray = [];\n    appRoleList.value.forEach(element => {\n      appList.push(element.applicationId);\n      appRoleArray.push({applicationId: element.applicationId, roleId: element.roleId});\n    });\n    const sorterAppList = appList.sort();\n    const duplicateApp = false;\n    for (let i = 0; i < sorterAppList.length - 1; i++) {\n      if (sorterAppList[i + 1] != null && sorterAppList[i] != null) {\n        if (sorterAppList[i + 1] === sorterAppList[i]) {\n          return { 'ValidateAppRole': true };\n        }\n      }\n    }\n\n    for (let i = 0; i < appRoleArray.length; i++) {\n      if ( appRoleArray[i] != null) {\n        if (appRoleArray[i].applicationId !== null &&  appRoleArray[i].roleId === null ) {\n          return { 'ValidateAppRoleNotNull': true };\n        }\n      }\n    }\n\n  }\n  return null;\n}\n\n@Component({\n  selector: 'app-mg-user-info',\n  templateUrl: './mg-user-info.component.html',\n  styleUrls: ['./mg-user-info.component.css']\n})\nexport class MgUserInfoComponent implements OnInit {\n\n  departmentList: DepartmentViewModel[];\n  applicationList: MgApplicationViewModel[];\n  edit = CONSTANTS.operation.edit;\n  create = CONSTANTS.operation.create;\n  read = CONSTANTS.operation.read;\n  // id: string;\n  userId: string;\n  operation: string;\n  mgUserForm: FormGroup;\n  mgUserViewModel: MgUserViewModel = <MgUserViewModel>{};\n  appRolesListArray = Array<MgRoleViewModel[]>();\n  appRoles: Observable<MgRoleViewModel[]>;\n  isMaxLength: boolean;\n\n  constructor(private router: Router,\n              private activatedRoute: ActivatedRoute,\n              private cd: ChangeDetectorRef,\n              private snackBar: MatSnackBar,\n              private userDataService: UserDataService,\n              private backofficeLookupService: BackofficeLookupService,\n              private userProfileService: UserProfileService) { }\n\n  ngOnInit() {\n    // Get the id from the activated route\n    this.userId = this.activatedRoute.snapshot.params['id'];\n    this.operation = this.activatedRoute.snapshot.params['operation'];\n    // Get all the master data\n    this.getDepartments();\n    this.getApplications();\n\n    // Create the Form Model\n    this.mgUserForm = new FormGroup({\n      userName: new FormControl(),\n      employeeId: new FormControl(),\n      email: new FormControl(),\n      // multiSelectedDepartmentIds: new FormControl(['a7140da7-b28b-4f6d-cbbc-08d58a2490fd']),\n      departments: new FormControl(),\n      activationDate: new FormControl(),\n      userApplicationRole: new FormArray([], ValidateAppRole),\n    });\n\n    if (this.operation.toLowerCase().trim() === this.create) {\n      this.addAppRole();\n    } else if (this.operation.toLocaleLowerCase().trim() === this.edit) {\n      // Get Roles for the application ;\n      this.getMGUser(this.userId);\n    }\n  }\n\n   getMGUser(userId) {\n    this.userDataService.getMGUserById(userId).subscribe(\n      (mgUserData) => {\n        if (this.operation.toLowerCase().trim() === this.edit) {\n          this.mgUserViewModel = mgUserData;\n          this.mgUserForm.get('userName').setValue(mgUserData.userName);\n          this.mgUserForm.get('employeeId').setValue(mgUserData.employeeId);\n          this.mgUserForm.get('email').setValue(mgUserData.email);\n          const departmentIds = [];\n          for (const departmentId of mgUserData.departments) {\n            departmentIds.push(departmentId);\n          }\n          this.mgUserForm.get('departments').setValue(departmentIds);\n          // this.mgUserForm.get('userApplicationRole').setValue(mgUserData.userApplicationRole);\n          this.mgUserForm.get('activationDate').setValue(mgUserData.activationDate);\n          const applicationRoleIdArray: ApplicationRoleIdViewModel[] = [];\n          const appRoleValue = mgUserData.userApplicationRole;\n          for (let i = 0; i < appRoleValue.length; i++) {\n            this.addAppRole();\n          }\n          this.userApplicationRole.controls.forEach((control , index) => {\n            control.get('applicationId').setValue(appRoleValue[index].applicationId);\n            this.getRolesForApplication(index);\n            control.get('roleId').setValue(appRoleValue[index].roleId);\n          });\n        }\n      }\n    );\n  }\n\n  getDepartments() {\n    this.departmentList = this.activatedRoute.snapshot.data['departments'];\n   }\n\n   getApplications() {\n    this.applicationList = this.activatedRoute.snapshot.data['applications'];\n  }\n\n   get userApplicationRole():  FormArray {\n    return <FormArray>this.mgUserForm.get('userApplicationRole');\n   }\n\n   buildAppRole(): FormGroup {\n      let appRoleFormGroup: FormGroup;\n      appRoleFormGroup = new FormGroup({\n        applicationId: new FormControl(),\n        roleId: new FormControl()\n    });\n    return appRoleFormGroup;\n   }\n\n   addAppRole() {\n    this.userApplicationRole.push(this.buildAppRole());\n    if (this.appRolesListArray === null || this.appRolesListArray === undefined) {\n      this.appRolesListArray = new Array<MgRoleViewModel[]>();\n    } else {\n      this.appRolesListArray.push([]);\n    }\n\n    if (this.userApplicationRole.length === this.applicationList.length) {\n\n      this.isMaxLength = true;\n    }\n    this.cd.detectChanges();\n  }\n  deleteAppRole(index: number) {\n    this.isMaxLength = false;\n    this.userApplicationRole.removeAt(index);\n\n    this.appRolesListArray.splice(index, 1);\n    this.cd.detectChanges();\n  }\n\n  getRolesForApplication(applicationIndex: number) {\n    const applicationId = this.userApplicationRole.controls[applicationIndex].get('applicationId').value;\n    this.appRoles = this.backofficeLookupService.getRolesByApplicationId(applicationId);\n    this.appRoles.subscribe(data => {\n      this.appRolesListArray[applicationIndex] = data;\n    });\n  }\n\n\n\n   saveUser() {\n    const savedMGUser: MgUserViewModel = Object.assign({}, this.mgUserViewModel, this.mgUserForm.value);\n    savedMGUser.updatedBy = this.userProfileService.GetBasicUserInfo().FirstName + ' ' +\n                            this.userProfileService.GetBasicUserInfo().LastName;\n    if (this.operation === this.create) {\n      savedMGUser.createdBy = this.userProfileService.GetBasicUserInfo().FirstName + ' ' +\n                            this.userProfileService.GetBasicUserInfo().LastName;\n      this.userDataService.createMGUser(savedMGUser)\n      .subscribe(data => {\n        window.scrollTo(0, 0);\n        this.snackBar.open('New user is created successfully', '', { duration: 8000, verticalPosition: 'top', panelClass: 'showSnackBar'});\n        this.router.navigate(['/usermgmt/mgusers']);\n      });\n    }  else if (this.operation === this.edit) {\n      savedMGUser.createdBy = this.mgUserViewModel.createdBy;\n      this.userDataService.updateMGUser(this.userId, savedMGUser)\n      .subscribe(data => {\n        window.scrollTo(0, 0);\n        this.snackBar.open('The user is updated successfully', '', { duration: 8000, verticalPosition: 'top', panelClass: 'showSnackBar'});\n        this.router.navigate(['/usermgmt/mgusers']);\n      });\n    }\n  }\n\n  cancel() {\n    window.scrollTo(0, 0);\n    this.router.navigate(['/usermgmt/mgusers']);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/user-mgmt/mg-user/mg-user-info/mg-user-info.component.ts","exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".usernameTH{\\r\\n\\twidth:14%;\\r\\n}\\r\\n.empIDTH{width:12%;}\\r\\n.emailTH{width:14%;}\\r\\n.departmentTH{width:10%;}\\r\\n.applicationRoleTH{width: 14%;}\\r\\n.activationTH{width: 16%;}\\r\\n.userStatusTH{\\r\\n\\twidth:10%; \\r\\n\\tdisplay:-webkit-box; \\r\\n\\tdisplay:-ms-flexbox; \\r\\n\\tdisplay:flex;\\r\\n\\t-webkit-box-align: center;\\r\\n\\t    -ms-flex-align: center;\\r\\n\\t        align-items: center;\\r\\n}\\r\\n.userActionTH{width:10%;}\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/user-mgmt/mg-user/mg-user-list/mg-user-list.component.css\n// module id = ../../../../../src/app/backoffice/user-mgmt/mg-user/mg-user-list/mg-user-list.component.css\n// module chunks = user-mgmt.module","module.exports = \"<div class=\\\"container-fluid pt-4\\\">\\r\\n  <h1 class=\\\"mainHeading mb-4 mt-2\\\">MG</h1>\\r\\n      <form [formGroup]=\\\"searchUsers\\\" (ngSubmit)=\\\"findUsers(searchUsers.get('searchText').value,searchUsers.get('startDate').value,searchUsers.get('endDate').value)\\\"\\r\\n      class=\\\"w-100\\\">\\r\\n\\r\\n        <div class=\\\"blueBackground pb-2 pl-4 pr-4 pt-2 alignItemCenter\\\">\\r\\n          <div class=\\\"row formSections borderBottomNone p-0\\\">\\r\\n                <div class=\\\"col-md-7\\\">\\r\\n                  <mat-form-field>\\r\\n                    <input matInput placeholder=\\\"Search by User Name, Employee ID, Email ID, Departments, Application, Roles, Activation date \\\" formControlName=\\\"searchText\\\" (keydown.backspace)=\\\"checkIsInputCleared()\\\">\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n\\r\\n          <div class=\\\"col-md-2 d-flex pr-0\\\">\\r\\n          <label class=\\\"optionsList mb-0 alignItemCenter pr-3\\\">From:</label>\\r\\n            <mat-form-field>\\r\\n                <mat-datepicker-toggle matSuffix [for]=\\\"sdate\\\">\\r\\n                    <mat-icon matDatepickerToggleIcon>\\r\\n                    <i class=\\\"fa fa-calendar\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                    </mat-icon>\\r\\n                </mat-datepicker-toggle>\\r\\n                  <input matInput [matDatepicker]=\\\"sdate\\\" placeholder=\\\"DD-MMM-YY\\\" formControlName=\\\"startDate\\\">\\r\\n                  <mat-datepicker #sdate></mat-datepicker>\\r\\n            </mat-form-field>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-3 d-flex pr-0\\\">\\r\\n          <label class=\\\"optionsList mb-0 alignItemCenter pr-3\\\">To:</label>\\r\\n                  <mat-form-field>\\r\\n                    <input matInput [matDatepicker]=\\\"enddate\\\" placeholder=\\\"DD-MMM-YY\\\" formControlName=\\\"endDate\\\" [min]=\\\"searchUsers.get('startDate').value\\\">\\r\\n                    <mat-datepicker-toggle matSuffix [for]=\\\"enddate\\\">\\r\\n                      <mat-icon matDatepickerToggleIcon>\\r\\n                        <i class=\\\"fa fa-calendar\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                      </mat-icon>\\r\\n                    </mat-datepicker-toggle>\\r\\n                    <mat-datepicker #enddate></mat-datepicker>\\r\\n                  </mat-form-field>\\r\\n                  <div class=\\\"controlButtons ml-4 mt-2\\\">\\r\\n                    <button title=\\\"Search\\\" type=\\\"submit\\\" class=\\\"genericButton genericSmallButton activeButton mat-primary mt-1\\\" mat-raised-button>Search</button>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n    </form>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12 controlButtons pt-5 pb-4\\\">\\r\\n      <button title=\\\"Create New MG User\\\" type=\\\"submit\\\" class=\\\"genericButton genericSmallButton defaultButton\\\" mat-raised-button\\r\\n        (click)=\\\"createMgUser()\\\">\\r\\n        <i class=\\\"fa fa-plus-circle\\\" aria-hidden=\\\"true\\\"></i><span>Create New MG User</span></button>\\r\\n      </div>\\r\\n    </div>\\r\\n    <mat-table #table [dataSource]= '!isSearch ? dataSource: filteredData' matSort (matSortChange)=\\\"sortData($event)\\\" matSortActive=\\\"activationDate\\\" matSortDirection=\\\"desc\\\" class=\\\"flexNone genericTable mb-2\\\">\\r\\n\\r\\n      <ng-container matColumnDef=\\\"userName\\\">\\r\\n        <mat-header-cell class =\\\"usernameTH alignItemCenter pr-0\\\" *matHeaderCellDef mat-sort-header> User Name </mat-header-cell>\\r\\n          <mat-cell class =\\\"usernameTH\\\" *matCellDef=\\\"let element\\\"><div class=\\\"d-flex\\\"><mat-icon class=\\\"userIcon alignItemCenter\\\">account_circle</mat-icon><span class=\\\"d-flex pl-4 alignItemCenter\\\">{{element.userName}}</span></div></mat-cell>\\r\\n        </ng-container>\\r\\n\\r\\n      <ng-container matColumnDef=\\\"employeeId\\\">\\r\\n        <mat-header-cell class =\\\"empIDTH\\\" *matHeaderCellDef mat-sort-header> Employee ID </mat-header-cell>\\r\\n        <mat-cell class =\\\"empIDTH\\\" *matCellDef=\\\"let element\\\"> {{element.employeeId}} </mat-cell>\\r\\n      </ng-container>\\r\\n\\r\\n      <ng-container matColumnDef=\\\"email\\\">\\r\\n        <mat-header-cell class =\\\"emailTH\\\" *matHeaderCellDef mat-sort-header> Email ID </mat-header-cell>\\r\\n        <mat-cell class =\\\"emailTH\\\" *matCellDef=\\\"let element\\\"> {{element.email}} </mat-cell>\\r\\n      </ng-container>\\r\\n\\r\\n      <ng-container matColumnDef=\\\"departments\\\">\\r\\n        <mat-header-cell class =\\\"departmentTH pl-0 pr-0\\\" *matHeaderCellDef mat-sort-header> Department(s) </mat-header-cell>\\r\\n        <mat-cell class =\\\"departmentTH pl-0 pr-0\\\" *matCellDef=\\\"let element\\\">\\r\\n          <ng-container *ngFor=\\\"let c of element.departments\\\">\\r\\n              <ng-container *ngIf=\\\"element.departments[0].name == c.name\\\">\\r\\n                  {{c.name}}<span>,</span>\\r\\n                  </ng-container>\\r\\n                  <ng-container *ngIf=\\\"element.departments[0].name != c.name\\\">\\r\\n                     {{c.name}}\\r\\n                  </ng-container>\\r\\n          </ng-container>\\r\\n        </mat-cell>\\r\\n      </ng-container>\\r\\n\\r\\n      <ng-container matColumnDef=\\\"userApplicationRole\\\">\\r\\n          <mat-header-cell class =\\\"applicationRoleTH\\\" *matHeaderCellDef mat-sort-header> Application(s) &amp; Role(s)\\r\\n            </mat-header-cell>\\r\\n          <mat-cell class =\\\"applicationRoleTH\\\" *matCellDef=\\\"let element\\\">\\r\\n              <ng-container *ngFor=\\\"let c of element.userApplicationRole\\\">\\r\\n                        <span class=\\\"d-block\\\">{{c.applicationName}} - {{c.roleName}}</span>\\r\\n                </ng-container>\\r\\n             </mat-cell>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"activationDate\\\">\\r\\n          <mat-header-cell class =\\\"activationTH\\\" *matHeaderCellDef mat-sort-header>\\r\\n\\t\\t  <span class=\\\"text-center\\\"><span class=\\\"d-block\\\">Activation/</span>Inactivation Date</span></mat-header-cell>\\r\\n          <mat-cell class =\\\"activationTH\\\" *matCellDef=\\\"let element\\\"><span class=\\\"d-block\\\">{{element.activationDate | date : \\\"dd-MMM-yy\\\"}}/</span>\\r\\n            <ng-container *ngIf=\\\"!element.isActive\\\">\\r\\n              {{element.deActivationDate | date : \\\"dd-MMM-yy\\\"}}\\r\\n              </ng-container>\\r\\n          </mat-cell>\\r\\n        </ng-container>\\r\\n\\r\\n      <ng-container matColumnDef=\\\"isActive\\\">\\r\\n          <mat-header-cell class=\\\"userStatusTH noOutlineOnFocus\\\" *matHeaderCellDef mat-sort-header> Status </mat-header-cell>\\r\\n          <mat-cell class=\\\"userStatusTH\\\" *matCellDef=\\\"let element\\\">\\r\\n            <ng-container *ngIf=\\\"element.isActive\\\">\\r\\n              <i class=\\\"fa fa-circle active_status\\\" aria-hidden=\\\"true\\\"></i>Active</ng-container>\\r\\n            <ng-container *ngIf=\\\"!element.isActive\\\">\\r\\n              <i class=\\\"fa fa-circle inactive_status\\\" aria-hidden=\\\"true\\\"></i>InActive\\r\\n             <span matTooltip=\\\"Activation Date:{{element.activationDate | date : 'dd-MMM-yy'}}/&#010; Deactivation Date: {{element.deActivationDate | date : 'dd-MMM-yy'}}\\\" matTooltipPosition=\\\"below\\\"><i class=\\\"fa fa-info-circle ml-2\\\" aria-hidden=\\\"true\\\"></i></span>\\r\\n            </ng-container>\\r\\n          </mat-cell>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container  matColumnDef=\\\"actions\\\" class=\\\"text-center\\\">\\r\\n          <mat-header-cell class=\\\"userActionTH noOutlineOnFocus\\\" *matHeaderCellDef mat-sort-header> </mat-header-cell>\\r\\n          <mat-cell class=\\\"userActionTH\\\" *matCellDef=\\\"let element\\\">\\r\\n            <mat-select placeholder=\\\"Actions\\\" name=\\\"Actions\\\" [(ngModel)]=\\\"actions\\\">\\r\\n                <ng-container *ngIf=\\\"element.isActive\\\">\\r\\n                     <mat-option value=\\\"{{element.id}}:edit\\\" #edit (click)=\\\"GoUserUpdate(edit.value)\\\">Edit</mat-option>\\r\\n                </ng-container>\\r\\n              <mat-option value=\\\"{{element.id}}:delete\\\" #delete (click)=\\\"GoUserDelete(delete.value)\\\">Delete</mat-option>\\r\\n            </mat-select>\\r\\n          </mat-cell>\\r\\n        </ng-container>\\r\\n\\r\\n  <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\r\\n  <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\r\\n\\r\\n  </mat-table>\\r\\n  <mat-paginator #paginator class=\\\"genericPagination\\\" [pageSize]=\\\"10\\\" [pageSizeOptions]=\\\"[5, 10, 20]\\\"></mat-paginator>\\r\\n\\r\\n  </div>\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/user-mgmt/mg-user/mg-user-list/mg-user-list.component.html\n// module id = ../../../../../src/app/backoffice/user-mgmt/mg-user/mg-user-list/mg-user-list.component.html\n// module chunks = user-mgmt.module","import { Component, OnInit, ViewChild, Input } from '@angular/core';\nimport { FormGroup, Validators, FormControl } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { CONSTANTS } from '../../../../common/constants';\nimport { UserDataService } from '../../../common/backoffice-shared/services/user-data.service';\nimport { MgUsersListViewModel } from '../../../viewmodel/usersviewmodel/mguserlistviewmodel';\nimport { MatTableDataSource, MatPaginator, MatSort } from '@angular/material';\nimport { DateAdapter, NativeDateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE } from '@angular/material/core';\nimport { DatePipe } from '@angular/common';\nimport { UserDetailsViewModel } from '../../../../common/viewmodels/userdetailsviewmodel';\nimport { NgForOf } from '@angular/common/src/directives';\nimport { DialogsService } from '../../../common/backoffice-shared/dialogs/dialogs.service';\nimport {Sort} from '@angular/material';\n\nconst DATE_FORMATS = {\n  parse: {\n    dateInput: { month: 'short', year: 'numeric', day: 'numeric' }\n  },\n  display: {\n    dateInput: 'input',\n    monthYearLabel: { year: 'numeric', month: 'short' },\n    dateA11yLabel: { year: 'numeric', month: 'long', day: 'numeric' },\n    monthYearA11yLabel: { year: 'numeric', month: 'long' },\n  }\n};\n\nexport class DatePickerDateAdapter extends NativeDateAdapter {\n  format(date: Date, displayFormat: Object): string {\n    date.setMinutes((date.getTimezoneOffset() * -1));\n    if (displayFormat === 'input') {\n      const day = date.getDate();\n      const month = date.toLocaleString('en-us', { month: 'long' });\n      const year = date.getFullYear();\n      return this._to2digit(day) + '-' + month.substring(0, 3) + '-' + year % 100;\n    } else {\n      return date.toDateString();\n    }\n  }\n\n  private _to2digit(n: number) {\n    return ('00' + n).slice(-2);\n  }\n}\n\n@Component({\n  selector: 'app-mg-user-list',\n  templateUrl: './mg-user-list.component.html',\n  styleUrls: ['./mg-user-list.component.css'],\n  providers: [DatePipe, DialogsService,\n    { provide: DateAdapter, useClass: DatePickerDateAdapter },\n    { provide: MAT_DATE_FORMATS, useValue: DATE_FORMATS },\n  ]\n})\n\nexport class MgUserListComponent implements OnInit {\n  edit = CONSTANTS.operation.edit;\n  create = CONSTANTS.operation.create;\n  read = CONSTANTS.operation.read;\n  operation: string;\n  // isRead: boolean;\n  dataSource: MatTableDataSource<MgUsersListViewModel>;\n  displayedColumns = [/*'firstName'*/'userName', 'employeeId', 'email', 'departments',\n  'userApplicationRole', 'activationDate', 'isActive', 'actions'];\n  isDeleted: boolean;\n  userList: MgUsersListViewModel[];\n  result: any;\n  actions: string;\n  filteredData: MatTableDataSource<MgUsersListViewModel>;\n  searchUsers: FormGroup;\n  isSearch: boolean;\n  isAppRoleData: boolean;\n  isDepartmentData: boolean;\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  @Input()\n  _dateValue;\n\n  constructor(private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private userDataService: UserDataService,\n    private dialogsService: DialogsService,\n    public datepipe: DatePipe) { }\n\n  ngOnInit() {\n    this.getMgUserList();\n    this.isSearch = false;\n    this.searchUsers = new FormGroup({\n      startDate: new FormControl(),\n      endDate: new FormControl(),\n      searchText: new FormControl()\n    });\n  }\n\n  findUsers(filterValue: string, filterFrom: string, filterTo: string) {\n    if (filterFrom !== null || filterTo !== null || (filterValue !== null && filterValue.length >= 3)) {\n      this.isSearch = true;\n    }\n    if (filterFrom !== null) {\n      filterFrom = this.datepipe.transform(filterFrom, 'yyyy-MM-dd');\n    }\n    if (filterTo !== null) {\n      filterTo = this.datepipe.transform(filterTo, 'yyyy-MM-dd');\n    }\n    if (filterValue !== null) {\n      filterValue = filterValue.trim();\n      filterValue = filterValue.toLowerCase();\n    }\n\n    this.filteredData = new MatTableDataSource<MgUsersListViewModel>(this.userList.filter(user => {\n      const searchActivationDate = this.datepipe.transform(user.activationDate, 'dd-MMM-yy hh:mm a');\n      const activationDate = this.datepipe.transform(user.activationDate, 'yyyy-MM-dd');\n      if (filterValue !== null && (filterFrom === null && filterTo === null)) {\n        return this.filterUser(user, filterValue) ||\n        searchActivationDate.toLowerCase().includes(filterValue);\n      } else if (filterFrom !== null && (filterTo === null && filterValue === null)) {\n        return activationDate >= filterFrom;\n      } else if (filterTo !== null && (filterFrom === null && filterValue === null)) {\n        return activationDate <= filterTo;\n      } else if (filterValue === null && (filterFrom !== null && filterTo !== null)) {\n        return filterFrom <= activationDate && activationDate <= filterTo;\n      } else if (filterFrom === null && (filterValue !== null && filterTo !== null)) {\n        return (this.filterUser(user, filterValue) ||\n        searchActivationDate.toLowerCase().includes(filterValue)) && activationDate <= filterTo;\n      } else if (filterTo === null && (filterFrom !== null && filterValue !== null)) {\n        return (this.filterUser(user, filterValue) ||\n        searchActivationDate.toLowerCase().includes(filterValue)) &&\n        activationDate >= filterFrom;\n      } else if (filterFrom !== null && filterTo !== null && filterValue !== null) {\n        return (this.filterUser(user, filterValue) ||\n        searchActivationDate.toLowerCase().includes(filterValue)) &&\n          (filterFrom <= activationDate && activationDate <= filterTo);\n      }\n    }));\n    this.filteredData.paginator = this.paginator;\n    this.filteredData.sort = this.sort;\n  }\n\n  filterUser(user: MgUsersListViewModel, filterValue: string) {\n    this.isAppRoleData = false;\n    this.isDepartmentData = false;\n    for (let i = 0; i < user.userApplicationRole.length; i++) {\n      if ((user.userApplicationRole[i].applicationName.toLowerCase().includes(filterValue))\n       || (user.userApplicationRole[i].roleName.toLowerCase().includes(filterValue))) {\n        this.isAppRoleData = true;\n        break;\n      }\n    }\n    for (let j = 0; j < user.departments.length; j++) {\n      if (user.departments[j].name.toLowerCase().includes(filterValue)) {\n        this.isDepartmentData = true;\n      }\n    }\n    return user.lastName.toLowerCase().includes(filterValue) ||\n    user.email.toLowerCase().includes(filterValue) ||\n    // user.firstName.toLowerCase().includes(filterValue) ||\n    user.userName.toString().includes(filterValue) ||\n    user.employeeId.toString().includes(filterValue) ||\n    this.isAppRoleData || this.isDepartmentData ;\n  }\n\n  checkIsInputCleared() {\n    if (this.searchUsers.get('searchText').value.length === 1) {\n      this.filteredData = new MatTableDataSource<MgUsersListViewModel>(this.userList);\n    }\n  }\n\n  sortData(sort: Sort) {\n    const data = this.userList.slice();\n    if (!sort.active || sort.direction === '') {\n      this.dataSource.data =  data.sort((a, b) => {\n        const isAsc = sort.direction === 'desc';\n           return compare(a.activationDate, b.activationDate, isAsc);\n      });\n      return;\n    }else {\n      if (this.isSearch) {\n        this.filteredData.data = this.filteredData.data.sort((a, b) => {\n          const isAsc = sort.direction === 'asc';\n          switch (sort.active) {\n            // case 'name': return compare(a.firstName, b.firstName, isAsc);\n            case 'name': return compare(a.userName, b.userName, isAsc);\n            case 'email': return compare(a.email, b.email, isAsc);\n            case 'employeeId': return compare(+a.employeeId, +b.employeeId, isAsc);\n            case 'isActive': return compare(a.isActive, b.isActive, isAsc);\n            case 'departments': return compare((a.departments.length === 0) ? '' :\n            a.departments[0].name, (b.departments.length === 0) ? '' :\n            b.departments[0].name, isAsc);\n            case 'userApplicationRole':\n            return compare((a.userApplicationRole.length === 0) ? '' :\n            a.userApplicationRole[0].applicationName, (b.userApplicationRole.length === 0) ? '' :\n            b.userApplicationRole[0].applicationName, isAsc);\n            case 'activationDate': return compare(a.activationDate, b.activationDate, isAsc);\n            default: return 0;\n          }\n        });\n        this.filteredData.paginator = this.paginator;\n      }\n      this.dataSource.data = data.sort((a, b) => {\n        const isAsc = sort.direction === 'asc';\n        switch (sort.active) {\n          // case 'name': return compare(a.firstName, b.firstName, isAsc);\n          case 'name': return compare(a.userName, b.userName, isAsc);\n          case 'email': return compare(a.email, b.email, isAsc);\n          case 'employeeId': return compare(+a.employeeId, +b.employeeId, isAsc);\n          case 'isActive': return compare(a.isActive, b.isActive, isAsc);\n          case 'departments': return compare((a.departments.length === 0) ? '' :\n          a.departments[0].name, (b.departments.length === 0) ? '' :\n          b.departments[0].name, isAsc);\n          case 'userApplicationRole':\n          return compare((a.userApplicationRole.length === 0) ? '' :\n          a.userApplicationRole[0].applicationName, (b.userApplicationRole.length === 0) ? '' :\n          b.userApplicationRole[0].applicationName, isAsc);\n          case 'activationDate': return compare(a.activationDate, b.activationDate, isAsc);\n          default: return 0;\n        }\n      });\n      this.dataSource.paginator = this.paginator;\n    }\n  }\n\n  getMgUserList() {\n    this.userDataService.getMgUsers().subscribe((mgUsersList) => {\n      this.userList = mgUsersList;\n      this.dataSource = new MatTableDataSource<MgUsersListViewModel>(this.userList);\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n    });\n  }\n\n   createMgUser() {\n    this.router.navigate(['../mguser', 0, this.create], { relativeTo: this.activatedRoute });\n  }\n\n  deleteUser(userId) {\n    this.userDataService.deleteMGUser(userId).subscribe((isDeleted) => {\n      this.isDeleted = isDeleted;\n    });\n  }\n\n  GoUserUpdate(value) {\n    const val = value.split(':');\n    const userId = val[0];\n    this.operation = val[1];\n    this.router.navigate(['../mguser', userId, this.operation.trim().toLowerCase()], { relativeTo: this.activatedRoute });\n  }\n\n  GoUserDelete(value) {\n    const val = value.split(':');\n    const userId = val[0];\n    this.dialogsService\n      .confirm('Confirm', 'Are you sure you want to delete this user?').subscribe(res => {\n        this.result = res;\n        if (this.result) {\n          // this.deleteUser(userId);\n          this.getMgUserList();\n        } else {\n          this.actions = null;\n        }\n      });\n  }\n}\n\nfunction compare(a, b, isAsc) {\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n}\n\n\n\n\n// WEBPACK FOOTER //\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/user-mgmt/mg-user/mg-user-list/mg-user-list.component.ts","import { Routes, RouterModule } from '@angular/router';\r\nimport { MgUserListComponent } from './mg-user/mg-user-list/mg-user-list.component';\r\nimport { MgUserInfoComponent } from './mg-user/mg-user-info/mg-user-info.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { DepartmentResolverService } from '../common/backoffice-shared/services/department-resolver.service';\r\nimport { ApplicationResolverService } from '../common/backoffice-shared/services/application-resolver.service';\r\nimport { AgentUserListComponent } from './agent-user/agent-user-list/agent-user-list.component';\r\nimport { AgentUserInfoComponent } from './agent-user/agent-user-info/agent-user-info.component';\r\nimport { HotelUserListComponent } from './hotel-user/hotel-user-list/hotel-user-list.component';\r\nimport { HotelUserInfoComponent } from './hotel-user/hotel-user-info/hotel-user-info.component';\r\nimport { RoleResolverService } from '../common/backoffice-shared/services/role-resolver.service';\r\nimport { DesignationResolverService } from '../common/backoffice-shared/services/designation-resolver.service';\r\nimport { IndividualHotelUserInfoComponent } from './hotel-user/individual-hotel-user-info/individual-hotel-user-info.component';\r\nimport { HotelTypeComponent } from './hotel-user/hotel-type/hotel-type.component';\r\nimport { SupplierUserInfoComponent } from './hotel-user/supplier-user-info/supplier-user-info.component';\r\nimport { HotelResolverService } from '../common/backoffice-shared/services/hotel-resolver.service';\r\n// import { RoleResolverService } from '../common/backoffice-shared/services/role-resolver.service';\r\n\r\n\r\n\r\nexport const userRoutes: Routes =\r\n[\r\n   // { path: '', redirectTo: 'mgusers', pathMatch: 'full' },\r\n    { path: 'mgusers', component: MgUserListComponent },\r\n    { path: 'mguser/:id/:operation',\r\n    component: MgUserInfoComponent,\r\n    resolve: {\r\n      departments: DepartmentResolverService,\r\n      applications: ApplicationResolverService\r\n    }\r\n    },\r\n    { path: 'agentusers', component: AgentUserListComponent },\r\n    { path: 'agentusers/:id/:operation',\r\n      component: AgentUserInfoComponent,\r\n      // resolve: {\r\n      //   designations: DesignationResolverService,\r\n      // }\r\n    },\r\n\r\n    { path: 'hoteluserslist', component: HotelUserListComponent },\r\n    {\r\n        path: 'hotelusers', component: HotelTypeComponent,\r\n\r\n        children: [\r\n            { path: '', redirectTo: 'hoteldetails', pathMatch: 'full' },\r\n            // {\r\n            //     path: 'hotelchainusers', component: HotelChainUserComponent\r\n            // } ,\r\n            { path: 'hoteluserinfo/:id/:operation', component: HotelUserInfoComponent },\r\n            {\r\n              path: 'hotelusers/hoteluserinfo/:id/:operation', component: HotelUserInfoComponent,\r\n              resolve: {\r\n                  roles: RoleResolverService,\r\n                 // designations: DesignationResolverService\r\n              }\r\n            },\r\n            { path: 'individual/:id/:operation',\r\n              component : IndividualHotelUserInfoComponent,\r\n                  resolve: {\r\n                      roles: RoleResolverService,\r\n                      designations: DesignationResolverService,\r\n                      hotels: HotelResolverService\r\n                          }\r\n            },\r\n\r\n            { path: 'supplieruser/:id/:operation',\r\n              component : SupplierUserInfoComponent,\r\n                  resolve: {\r\n                      roles: RoleResolverService,\r\n                      designations: DesignationResolverService\r\n                          }\r\n            }\r\n        ]\r\n\r\n    },\r\n    // { path: 'hoteluserinfo/:id/:operation', component : HotelUserInfoComponent},\r\n    // { path: 'hotelchainusers', component: HotelChainUserComponent },\r\n];\r\n\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(userRoutes)],\r\n    exports: [RouterModule]\r\n  })\r\n  export class UserMgmtRoutingModule {}\r\n\r\n  export const routedUserComponents = [\r\n    MgUserListComponent,\r\n    MgUserInfoComponent,\r\n    AgentUserListComponent,\r\n    AgentUserInfoComponent,\r\n    HotelUserListComponent,\r\n    HotelUserInfoComponent\r\n  ];\r\n\n\n\n// WEBPACK FOOTER //\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/user-mgmt/user-mgmt-routing.module.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { UserMgmtRoutingModule, routedUserComponents } from './user-mgmt-routing.module';\nimport { ReactiveFormsModule, FormsModule} from '@angular/forms';\nimport { MaterialModule } from '../../common/material/material.module';\nimport { BackofficeLookupService } from '../common/backoffice-shared/services/backoffice-lookup';\nimport { DepartmentResolverService } from '../common/backoffice-shared/services/department-resolver.service';\nimport { DatePipe } from '@angular/common';\nimport { ApplicationResolverService } from '../common/backoffice-shared/services/application-resolver.service';\nimport { AgentUserInfoComponent } from './agent-user/agent-user-info/agent-user-info.component';\nimport { AgentUserListComponent } from './agent-user/agent-user-list/agent-user-list.component';\nimport { HotelUserListComponent } from './hotel-user/hotel-user-list/hotel-user-list.component';\nimport { HotelUserInfoComponent } from './hotel-user/hotel-user-info/hotel-user-info.component';\nimport { IndividualHotelUserInfoComponent } from './hotel-user/individual-hotel-user-info/individual-hotel-user-info.component';\nimport { DesignationResolverService } from '../common/backoffice-shared/services/designation-resolver.service';\nimport { RoleResolverService } from '../common/backoffice-shared/services/role-resolver.service';\nimport { HotelTypeComponent } from './hotel-user/hotel-type/hotel-type.component';\nimport { SupplierUserInfoComponent } from './hotel-user/supplier-user-info/supplier-user-info.component';\nimport { HotelResolverService } from '../common/backoffice-shared/services/hotel-resolver.service';\n\n\n// import { RoleResolverService } from '../common/backoffice-shared/services/role-resolver.service';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    UserMgmtRoutingModule,\n    ReactiveFormsModule,\n    MaterialModule,\n    FormsModule\n  ],\n  declarations: [routedUserComponents, AgentUserInfoComponent,\n                 AgentUserListComponent, HotelUserListComponent,\n                 HotelUserInfoComponent,\n                  IndividualHotelUserInfoComponent,\n                  HotelTypeComponent,\n                  SupplierUserInfoComponent],\n  providers: [BackofficeLookupService, DepartmentResolverService,\n              ApplicationResolverService, DesignationResolverService,\n      RoleResolverService, DatePipe, HotelResolverService]\n})\nexport class UserMgmtModule { }\n\n\n\n// WEBPACK FOOTER //\n// D:/MG/MG-Grp/Source/Dev/Jarvis/Web/Jarvis.Web/MG.Jarvis.Web/ClientApp/src/app/backoffice/user-mgmt/user-mgmt.module.ts"],"sourceRoot":"webpack:///"}